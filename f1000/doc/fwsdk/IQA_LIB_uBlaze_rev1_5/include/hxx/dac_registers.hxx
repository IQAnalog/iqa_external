//*******************************************************************************
//      __  __                                                                  *
//     /  \/  \                                                                 *
//         \   \                                                                *
//    I Q - A N A L O G                                                         *
//           \   \            IQ-Analog Corp                                    *
//            \__/\__/       www.iqanalog.com                                   *
//                                                                              *
//------------------------------------------------------------------------------*
//                                                                              *
// Copyright (C) 2018-2019 IQ-Analog Corp. All rights reserved.                 *
//                                                                              *
//------------------------------------------------------------------------------*
// IQ-Analog CONFIDENTIAL                                                       *
//------------------------------------------------------------------------------*
//                                                                              *
// This file is released with "Government Purpose Rights" as defined            *
// in DFARS SUBPART 227.71, clause 252.227-7013.                                *
//                                                                              *
//*******************************************************************************

// Generated by RMM 3.3
// IQ-Analog Corp. 2013-2018.

#ifndef __DAC_REGISTERS_REGISTERS__
#define __DAC_REGISTERS_REGISTERS__

#ifndef __DAC_INIT__
#define __DAC_INIT__
#define DAC_INIT(x) (x)->dac_init_register.dac_init_u.dac_init
#define dac_registers_DAC_INIT(x) (x)->dac_init_register.dac_init_u.bits.dac_init
#define dac_registers_CHANNEL_ID(x) (x)->dac_init_register.dac_init_u.bits.channel_id
#define dac_registers_CHANNEL_SHIFT_VALUE(x) (x)->dac_init_register.dac_init_u.bits.channel_shift_value
typedef volatile struct dac_init_s {
	union {
		struct {
			unsigned int dac_init : 1;
			unsigned int channel_id : 2;
			unsigned int channel_shift_value : 4;
		} bits;
		uint32_t dac_init;
	} dac_init_u;
} dac_init_t;
#endif /* __DAC_INIT__ */

#ifndef __SYSREF_CTRL__
#define __SYSREF_CTRL__
#define SYSREF_CTRL(x) (x)->sysref_ctrl_register.sysref_ctrl_u.sysref_ctrl
#define dac_registers_SYSREF_CNT_ENABLE(x) (x)->sysref_ctrl_register.sysref_ctrl_u.bits.sysref_cnt_enable
#define dac_registers_SYSREF_CNT_STOP(x) (x)->sysref_ctrl_register.sysref_ctrl_u.bits.sysref_cnt_stop
typedef volatile struct sysref_ctrl_s {
	union {
		struct {
			unsigned int sysref_cnt_enable : 1;
			unsigned int sysref_cnt_stop : 10;
		} bits;
		uint32_t sysref_ctrl;
	} sysref_ctrl_u;
} sysref_ctrl_t;
#endif /* __SYSREF_CTRL__ */

#ifndef __DEM_CTRL__
#define __DEM_CTRL__
#define DEM_CTRL(x) (x)->dem_ctrl_register.dem_ctrl_u.dem_ctrl
#define dac_registers_DEM_ENABLE(x) (x)->dem_ctrl_register.dem_ctrl_u.bits.dem_enable
#define dac_registers_DEM_FORCE(x) (x)->dem_ctrl_register.dem_ctrl_u.bits.dem_force
#define dac_registers_DEM_FORCE_VALUE(x) (x)->dem_ctrl_register.dem_ctrl_u.bits.dem_force_value
typedef volatile struct dem_ctrl_s {
	union {
		struct {
			unsigned int dem_enable : 1;
			unsigned int dem_force : 1;
			unsigned int dem_force_value : 24;
		} bits;
		uint32_t dem_ctrl;
	} dem_ctrl_u;
} dem_ctrl_t;
#endif /* __DEM_CTRL__ */

#ifndef __LFSR_CTRL__
#define __LFSR_CTRL__
#define LFSR_CTRL(x) (x)->lfsr_ctrl_register.lfsr_ctrl_u.lfsr_ctrl
#define dac_registers_LFSR_ENABLE(x) (x)->lfsr_ctrl_register.lfsr_ctrl_u.bits.lfsr_enable
#define dac_registers_LFSR_INIT_ENABLE(x) (x)->lfsr_ctrl_register.lfsr_ctrl_u.bits.lfsr_init_enable
#define dac_registers_LFSR_RESTART(x) (x)->lfsr_ctrl_register.lfsr_ctrl_u.bits.lfsr_restart
#define dac_registers_LFSR_SEED(x) (x)->lfsr_ctrl_register.lfsr_ctrl_u.bits.lfsr_seed
typedef volatile struct lfsr_ctrl_s {
	union {
		struct {
			unsigned int lfsr_enable : 1;
			unsigned int lfsr_init_enable : 1;
			unsigned int lfsr_restart : 1;
			unsigned int lfsr_seed : 23;
		} bits;
		uint32_t lfsr_ctrl;
	} lfsr_ctrl_u;
} lfsr_ctrl_t;
#endif /* __LFSR_CTRL__ */

#ifndef __ATEST_CTRL__
#define __ATEST_CTRL__
#define ATEST_CTRL(x) (x)->atest_ctrl_register.atest_ctrl_u.atest_ctrl
#define dac_registers_ATEST_SEL(x) (x)->atest_ctrl_register.atest_ctrl_u.bits.atest_sel
typedef volatile struct atest_ctrl_s {
	union {
		struct {
			unsigned int atest_sel : 8;
		} bits;
		uint32_t atest_ctrl;
	} atest_ctrl_u;
} atest_ctrl_t;
#endif /* __ATEST_CTRL__ */

#ifndef __PWR_CTRL__
#define __PWR_CTRL__
#define PWR_CTRL(x) (x)->pwr_ctrl_register.pwr_ctrl_u.pwr_ctrl
#define dac_registers_DAC_CORE_ENABLE(x) (x)->pwr_ctrl_register.pwr_ctrl_u.bits.dac_core_enable
#define dac_registers_DAC_CM_BIAS(x) (x)->pwr_ctrl_register.pwr_ctrl_u.bits.dac_cm_bias
typedef volatile struct pwr_ctrl_s {
	union {
		struct {
			unsigned int dac_core_enable : 2;
			unsigned int dac_cm_bias : 4;
		} bits;
		uint32_t pwr_ctrl;
	} pwr_ctrl_u;
} pwr_ctrl_t;
#endif /* __PWR_CTRL__ */

#ifndef __MUX_CTRL__
#define __MUX_CTRL__
#define MUX_CTRL(x) (x)->mux_ctrl_register.mux_ctrl_u.mux_ctrl
#define dac_registers_MUX_CTRL(x) (x)->mux_ctrl_register.mux_ctrl_u.bits.mux_ctrl
typedef volatile struct mux_ctrl_s {
	union {
		struct {
			unsigned int mux_ctrl : 17;
		} bits;
		uint32_t mux_ctrl;
	} mux_ctrl_u;
} mux_ctrl_t;
#endif /* __MUX_CTRL__ */

#ifndef __DATA_CTRL__
#define __DATA_CTRL__
#define DATA_CTRL(x) (x)->data_ctrl_register.data_ctrl_u.data_ctrl
#define dac_registers_DAC0_DATA_ENABLE(x) (x)->data_ctrl_register.data_ctrl_u.bits.dac0_data_enable
#define dac_registers_DAC0_DATA0_CTRL(x) (x)->data_ctrl_register.data_ctrl_u.bits.dac0_data0_ctrl
#define dac_registers_DAC0_DATA1_CTRL(x) (x)->data_ctrl_register.data_ctrl_u.bits.dac0_data1_ctrl
#define dac_registers_DAC0_CLK0_ENABLE(x) (x)->data_ctrl_register.data_ctrl_u.bits.dac0_clk0_enable
#define dac_registers_DAC0_CLK1_ENABLE(x) (x)->data_ctrl_register.data_ctrl_u.bits.dac0_clk1_enable
#define dac_registers_DAC1_DATA_ENABLE(x) (x)->data_ctrl_register.data_ctrl_u.bits.dac1_data_enable
#define dac_registers_DAC1_DATA0_CTRL(x) (x)->data_ctrl_register.data_ctrl_u.bits.dac1_data0_ctrl
#define dac_registers_DAC1_DATA1_CTRL(x) (x)->data_ctrl_register.data_ctrl_u.bits.dac1_data1_ctrl
#define dac_registers_DAC1_CLK0_ENABLE(x) (x)->data_ctrl_register.data_ctrl_u.bits.dac1_clk0_enable
#define dac_registers_DAC1_CLK1_ENABLE(x) (x)->data_ctrl_register.data_ctrl_u.bits.dac1_clk1_enable
typedef volatile struct data_ctrl_s {
	union {
		struct {
			unsigned int dac0_data_enable : 2;
			unsigned int dac0_data0_ctrl : 4;
			unsigned int dac0_data1_ctrl : 4;
			unsigned int dac0_clk0_enable : 2;
			unsigned int dac0_clk1_enable : 2;
			unsigned int dac1_data_enable : 2;
			unsigned int dac1_data0_ctrl : 4;
			unsigned int dac1_data1_ctrl : 4;
			unsigned int dac1_clk0_enable : 2;
			unsigned int dac1_clk1_enable : 2;
		} bits;
		uint32_t data_ctrl;
	} data_ctrl_u;
} data_ctrl_t;
#endif /* __DATA_CTRL__ */

#ifndef __CLK_CTRL0__
#define __CLK_CTRL0__
#define CLK_CTRL0(x) (x)->clk_ctrl0_register.clk_ctrl0_u.clk_ctrl0
#define dac_registers_DAC0_CLK0_CTRL(x) (x)->clk_ctrl0_register.clk_ctrl0_u.bits.dac0_clk0_ctrl
typedef volatile struct clk_ctrl0_s {
	union {
		struct {
			unsigned int dac0_clk0_ctrl : 32;
		} bits;
		uint32_t clk_ctrl0;
	} clk_ctrl0_u;
} clk_ctrl0_t;
#endif /* __CLK_CTRL0__ */

#ifndef __CLK_CTRL1__
#define __CLK_CTRL1__
#define CLK_CTRL1(x) (x)->clk_ctrl1_register.clk_ctrl1_u.clk_ctrl1
#define dac_registers_DAC0_CLK1_CTRL(x) (x)->clk_ctrl1_register.clk_ctrl1_u.bits.dac0_clk1_ctrl
typedef volatile struct clk_ctrl1_s {
	union {
		struct {
			unsigned int dac0_clk1_ctrl : 32;
		} bits;
		uint32_t clk_ctrl1;
	} clk_ctrl1_u;
} clk_ctrl1_t;
#endif /* __CLK_CTRL1__ */

#ifndef __CLK_CTRL2__
#define __CLK_CTRL2__
#define CLK_CTRL2(x) (x)->clk_ctrl2_register.clk_ctrl2_u.clk_ctrl2
#define dac_registers_DAC1_CLK0_CTRL(x) (x)->clk_ctrl2_register.clk_ctrl2_u.bits.dac1_clk0_ctrl
typedef volatile struct clk_ctrl2_s {
	union {
		struct {
			unsigned int dac1_clk0_ctrl : 32;
		} bits;
		uint32_t clk_ctrl2;
	} clk_ctrl2_u;
} clk_ctrl2_t;
#endif /* __CLK_CTRL2__ */

#ifndef __CLK_CTRL3__
#define __CLK_CTRL3__
#define CLK_CTRL3(x) (x)->clk_ctrl3_register.clk_ctrl3_u.clk_ctrl3
#define dac_registers_DAC1_CLK1_CTRL(x) (x)->clk_ctrl3_register.clk_ctrl3_u.bits.dac1_clk1_ctrl
typedef volatile struct clk_ctrl3_s {
	union {
		struct {
			unsigned int dac1_clk1_ctrl : 32;
		} bits;
		uint32_t clk_ctrl3;
	} clk_ctrl3_u;
} clk_ctrl3_t;
#endif /* __CLK_CTRL3__ */

#ifndef __LDO0_CTRL__
#define __LDO0_CTRL__
#define LDO0_CTRL(x) (x)->ldo0_ctrl_register.ldo0_ctrl_u.ldo0_ctrl
#define dac_registers_LDO0_ENABLE(x) (x)->ldo0_ctrl_register.ldo0_ctrl_u.bits.ldo0_enable
#define dac_registers_LDO0_CLAMP_EN(x) (x)->ldo0_ctrl_register.ldo0_ctrl_u.bits.ldo0_clamp_en
#define dac_registers_LDO0_VSET(x) (x)->ldo0_ctrl_register.ldo0_ctrl_u.bits.ldo0_vset
#define dac_registers_LDO0_REF_SELECT(x) (x)->ldo0_ctrl_register.ldo0_ctrl_u.bits.ldo0_ref_select
#define dac_registers_LDO0_VSET_LSB(x) (x)->ldo0_ctrl_register.ldo0_ctrl_u.bits.ldo0_vset_lsb
#define dac_registers_LDO0_FINE_EN(x) (x)->ldo0_ctrl_register.ldo0_ctrl_u.bits.ldo0_fine_en
#define dac_registers_LDO0_FINE_RATE(x) (x)->ldo0_ctrl_register.ldo0_ctrl_u.bits.ldo0_fine_rate
#define dac_registers_LDO0_FINE_VAL(x) (x)->ldo0_ctrl_register.ldo0_ctrl_u.bits.ldo0_fine_val
typedef volatile struct ldo0_ctrl_s {
	union {
		struct {
			unsigned int ldo0_enable : 1;
			unsigned int ldo0_clamp_en : 1;
			unsigned int ldo0_vset : 4;
			unsigned int ldo0_ref_select : 1;
			unsigned int ldo0_vset_lsb : 1;
			unsigned int ldo0_fine_en : 1;
			unsigned int ldo0_fine_rate : 2;
			int ldo0_fine_val : 8;
		} bits;
		uint32_t ldo0_ctrl;
	} ldo0_ctrl_u;
} ldo0_ctrl_t;
#endif /* __LDO0_CTRL__ */

#ifndef __LDO1_CTRL__
#define __LDO1_CTRL__
#define LDO1_CTRL(x) (x)->ldo1_ctrl_register.ldo1_ctrl_u.ldo1_ctrl
#define dac_registers_LDO1_ENABLE(x) (x)->ldo1_ctrl_register.ldo1_ctrl_u.bits.ldo1_enable
#define dac_registers_LDO1_CLAMP_EN(x) (x)->ldo1_ctrl_register.ldo1_ctrl_u.bits.ldo1_clamp_en
#define dac_registers_LDO1_VSET(x) (x)->ldo1_ctrl_register.ldo1_ctrl_u.bits.ldo1_vset
#define dac_registers_LDO1_REF_SELECT(x) (x)->ldo1_ctrl_register.ldo1_ctrl_u.bits.ldo1_ref_select
#define dac_registers_LDO1_VSET_LSB(x) (x)->ldo1_ctrl_register.ldo1_ctrl_u.bits.ldo1_vset_lsb
#define dac_registers_LDO1_FINE_EN(x) (x)->ldo1_ctrl_register.ldo1_ctrl_u.bits.ldo1_fine_en
#define dac_registers_LDO1_FINE_RATE(x) (x)->ldo1_ctrl_register.ldo1_ctrl_u.bits.ldo1_fine_rate
#define dac_registers_LDO1_FINE_VAL(x) (x)->ldo1_ctrl_register.ldo1_ctrl_u.bits.ldo1_fine_val
typedef volatile struct ldo1_ctrl_s {
	union {
		struct {
			unsigned int ldo1_enable : 1;
			unsigned int ldo1_clamp_en : 1;
			unsigned int ldo1_vset : 4;
			unsigned int ldo1_ref_select : 1;
			unsigned int ldo1_vset_lsb : 1;
			unsigned int ldo1_fine_en : 1;
			unsigned int ldo1_fine_rate : 2;
			int ldo1_fine_val : 8;
		} bits;
		uint32_t ldo1_ctrl;
	} ldo1_ctrl_u;
} ldo1_ctrl_t;
#endif /* __LDO1_CTRL__ */

#ifndef __DLL_CTRL__
#define __DLL_CTRL__
#define DLL_CTRL(x) (x)->dll_ctrl_register.dll_ctrl_u.dll_ctrl
#define dac_registers_DLL_RST_N(x) (x)->dll_ctrl_register.dll_ctrl_u.bits.dll_rst_n
#define dac_registers_DLL_CLK_EN(x) (x)->dll_ctrl_register.dll_ctrl_u.bits.dll_clk_en
#define dac_registers_DLL_CTRL(x) (x)->dll_ctrl_register.dll_ctrl_u.bits.dll_ctrl
#define dac_registers_DLL_CP_BIAS_CTRL(x) (x)->dll_ctrl_register.dll_ctrl_u.bits.dll_cp_bias_ctrl
#define dac_registers_DLL_HF_SEL(x) (x)->dll_ctrl_register.dll_ctrl_u.bits.dll_hf_sel
#define dac_registers_DLL_VC_CTRL(x) (x)->dll_ctrl_register.dll_ctrl_u.bits.dll_vc_ctrl
#define dac_registers_DLL_CAP_CTRL(x) (x)->dll_ctrl_register.dll_ctrl_u.bits.dll_cap_ctrl
#define dac_registers_CLK_CM_CTRL(x) (x)->dll_ctrl_register.dll_ctrl_u.bits.clk_cm_ctrl
typedef volatile struct dll_ctrl_s {
	union {
		struct {
			unsigned int dll_rst_n : 1;
			unsigned int dll_clk_en : 1;
			unsigned int dll_ctrl : 10;
			unsigned int dll_cp_bias_ctrl : 2;
			unsigned int dll_hf_sel : 1;
			unsigned int dll_vc_ctrl : 4;
			unsigned int dll_cap_ctrl : 3;
			unsigned int clk_cm_ctrl : 2;
		} bits;
		uint32_t dll_ctrl;
	} dll_ctrl_u;
} dll_ctrl_t;
#endif /* __DLL_CTRL__ */

#ifndef __TC_CTRL0__
#define __TC_CTRL0__
#define TC_CTRL0(x) (x)->tc_ctrl0_register.tc_ctrl0_u.tc_ctrl0
#define dac_registers_TC_0(x) (x)->tc_ctrl0_register.tc_ctrl0_u.bits.tc_0
#define dac_registers_TC_1(x) (x)->tc_ctrl0_register.tc_ctrl0_u.bits.tc_1
#define dac_registers_TC_2(x) (x)->tc_ctrl0_register.tc_ctrl0_u.bits.tc_2
#define dac_registers_TC_3(x) (x)->tc_ctrl0_register.tc_ctrl0_u.bits.tc_3
typedef volatile struct tc_ctrl0_s {
	union {
		struct {
			unsigned int tc_0 : 8;
			unsigned int tc_1 : 8;
			unsigned int tc_2 : 8;
			unsigned int tc_3 : 8;
		} bits;
		uint32_t tc_ctrl0;
	} tc_ctrl0_u;
} tc_ctrl0_t;
#endif /* __TC_CTRL0__ */

#ifndef __TC_CTRL1__
#define __TC_CTRL1__
#define TC_CTRL1(x) (x)->tc_ctrl1_register.tc_ctrl1_u.tc_ctrl1
#define dac_registers_TC_4(x) (x)->tc_ctrl1_register.tc_ctrl1_u.bits.tc_4
#define dac_registers_TC_5(x) (x)->tc_ctrl1_register.tc_ctrl1_u.bits.tc_5
#define dac_registers_TC_6(x) (x)->tc_ctrl1_register.tc_ctrl1_u.bits.tc_6
#define dac_registers_TC_7(x) (x)->tc_ctrl1_register.tc_ctrl1_u.bits.tc_7
typedef volatile struct tc_ctrl1_s {
	union {
		struct {
			unsigned int tc_4 : 8;
			unsigned int tc_5 : 8;
			unsigned int tc_6 : 8;
			unsigned int tc_7 : 8;
		} bits;
		uint32_t tc_ctrl1;
	} tc_ctrl1_u;
} tc_ctrl1_t;
#endif /* __TC_CTRL1__ */

#ifndef __DLL_STATUS__
#define __DLL_STATUS__
#define DLL_STATUS(x) (x)->dll_status_register.dll_status_u.dll_status
#define dac_registers_DLL_STATUS(x) (x)->dll_status_register.dll_status_u.bits.dll_status
typedef volatile struct dll_status_s {
	union {
		struct {
			unsigned int dll_status : 4;
		} bits;
		uint32_t dll_status;
	} dll_status_u;
} dll_status_t;
#endif /* __DLL_STATUS__ */

#ifndef __DAC0_GP__
#define __DAC0_GP__
#define DAC0_GP(x) (x)->dac0_gp_register.dac0_gp_u.dac0_gp
#define dac_registers_DAC0_GP(x) (x)->dac0_gp_register.dac0_gp_u.bits.dac0_gp
typedef volatile struct dac0_gp_s {
	union {
		struct {
			unsigned int dac0_gp : 32;
		} bits;
		uint32_t dac0_gp;
	} dac0_gp_u;
} dac0_gp_t;
#endif /* __DAC0_GP__ */

#ifndef __DAC1_GP__
#define __DAC1_GP__
#define DAC1_GP(x) (x)->dac1_gp_register.dac1_gp_u.dac1_gp
#define dac_registers_DAC1_GP(x) (x)->dac1_gp_register.dac1_gp_u.bits.dac1_gp
typedef volatile struct dac1_gp_s {
	union {
		struct {
			unsigned int dac1_gp : 32;
		} bits;
		uint32_t dac1_gp;
	} dac1_gp_u;
} dac1_gp_t;
#endif /* __DAC1_GP__ */

#ifndef __SYSREF_RD__
#define __SYSREF_RD__
#define SYSREF_RD(x) (x)->sysref_rd_register.sysref_rd_u.sysref_rd
#define dac_registers_DAC_CHANNEL_ID(x) (x)->sysref_rd_register.sysref_rd_u.bits.dac_channel_id
#define dac_registers_DAC_SYSREF_CNT(x) (x)->sysref_rd_register.sysref_rd_u.bits.dac_sysref_cnt
#define dac_registers_SYSREF_CNT_VALUE(x) (x)->sysref_rd_register.sysref_rd_u.bits.sysref_cnt_value
typedef volatile struct sysref_rd_s {
	union {
		struct {
			unsigned int dac_channel_id : 8;
			unsigned int dac_sysref_cnt : 10;
			unsigned int sysref_cnt_value : 10;
		} bits;
		uint32_t sysref_rd;
	} sysref_rd_u;
} sysref_rd_t;
#endif /* __SYSREF_RD__ */

typedef struct dac_registers_s
{
	dac_init_t dac_init_register;	// Address: 0x0
	sysref_ctrl_t sysref_ctrl_register;	// Address: 0x1
	dem_ctrl_t dem_ctrl_register;	// Address: 0x2
	lfsr_ctrl_t lfsr_ctrl_register;	// Address: 0x3
	uint32_t dummy0_register;
	uint32_t dummy1_register;
	uint32_t dummy2_register;
	uint32_t dummy3_register;
	uint32_t dummy4_register;
	uint32_t dummy5_register;
	uint32_t dummy6_register;
	uint32_t dummy7_register;
	uint32_t dummy8_register;
	uint32_t dummy9_register;
	uint32_t dummy10_register;
	atest_ctrl_t atest_ctrl_register;	// Address: 0xf
	pwr_ctrl_t pwr_ctrl_register;	// Address: 0x10
	mux_ctrl_t mux_ctrl_register;	// Address: 0x11
	data_ctrl_t data_ctrl_register;	// Address: 0x12
	clk_ctrl0_t clk_ctrl0_register;	// Address: 0x13
	clk_ctrl1_t clk_ctrl1_register;	// Address: 0x14
	clk_ctrl2_t clk_ctrl2_register;	// Address: 0x15
	clk_ctrl3_t clk_ctrl3_register;	// Address: 0x16
	ldo0_ctrl_t ldo0_ctrl_register;	// Address: 0x17
	ldo1_ctrl_t ldo1_ctrl_register;	// Address: 0x18
	dll_ctrl_t dll_ctrl_register;	// Address: 0x19
	tc_ctrl0_t tc_ctrl0_register;	// Address: 0x1a
	tc_ctrl1_t tc_ctrl1_register;	// Address: 0x1b
	dll_status_t dll_status_register;	// Address: 0x1c
	dac0_gp_t dac0_gp_register;	// Address: 0x1d
	dac1_gp_t dac1_gp_register;	// Address: 0x1e
	sysref_rd_t sysref_rd_register;	// Address: 0x1f
} dac_registers_t;

#endif /* __DAC_REGISTERS_REGISTERS__ */
