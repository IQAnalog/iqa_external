//*******************************************************************************
//      __  __                                                                  *
//     /  \/  \                                                                 *
//         \   \                                                                *
//    I Q - A N A L O G                                                         *
//           \   \            IQ-Analog Corp                                    *
//            \__/\__/       www.iqanalog.com                                   *
//                                                                              *
//------------------------------------------------------------------------------*
//                                                                              *
// Copyright (C) 2018-2019 IQ-Analog Corp. All rights reserved.                 *
//                                                                              *
//------------------------------------------------------------------------------*
// IQ-Analog CONFIDENTIAL                                                       *
//------------------------------------------------------------------------------*
//                                                                              *
// This file is released with "Government Purpose Rights" as defined            *
// in DFARS SUBPART 227.71, clause 252.227-7013.                                *
//                                                                              *
//*******************************************************************************

// Generated by RMM 3.3
// IQ-Analog Corp. 2013-2018.

#ifndef __F1000_PAD_CTRL_REGS_REGISTERS__
#define __F1000_PAD_CTRL_REGS_REGISTERS__

#ifndef __BOOT_MODE__
#define __BOOT_MODE__
#define BOOT_MODE(x) (x)->boot_mode_register.boot_mode_u.boot_mode
#define f1000_pad_ctrl_regs_CHIP_REVISION(x) (x)->boot_mode_register.boot_mode_u.bits.chip_revision
#define f1000_pad_ctrl_regs_BOOT(x) (x)->boot_mode_register.boot_mode_u.bits.boot
#define f1000_pad_ctrl_regs_BOND(x) (x)->boot_mode_register.boot_mode_u.bits.bond
typedef volatile struct boot_mode_s {
	union {
		struct {
			unsigned int chip_revision : 8;
			unsigned int boot : 5;
			unsigned int bond : 2;
		} bits;
		uint32_t boot_mode;
	} boot_mode_u;
} boot_mode_t;
#endif /* __BOOT_MODE__ */

#ifndef __PAD_MISC_CONFIG__
#define __PAD_MISC_CONFIG__
#define PAD_MISC_CONFIG(x) (x)->pad_misc_config_register.pad_misc_config_u.pad_misc_config
#define f1000_pad_ctrl_regs_I2C_PAD_CFG(x) (x)->pad_misc_config_register.pad_misc_config_u.bits.i2c_pad_cfg
#define f1000_pad_ctrl_regs_MSPI_PAD_CFG(x) (x)->pad_misc_config_register.pad_misc_config_u.bits.mspi_pad_cfg
#define f1000_pad_ctrl_regs_SSPI_PAD_CFG(x) (x)->pad_misc_config_register.pad_misc_config_u.bits.sspi_pad_cfg
#define f1000_pad_ctrl_regs_UART_PAD_CFG(x) (x)->pad_misc_config_register.pad_misc_config_u.bits.uart_pad_cfg
#define f1000_pad_ctrl_regs_GLOBAL_PAD_CFG(x) (x)->pad_misc_config_register.pad_misc_config_u.bits.global_pad_cfg
#define f1000_pad_ctrl_regs_JTAG_SEL(x) (x)->pad_misc_config_register.pad_misc_config_u.bits.jtag_sel
#define f1000_pad_ctrl_regs_I2C_SEL(x) (x)->pad_misc_config_register.pad_misc_config_u.bits.i2c_sel
#define f1000_pad_ctrl_regs_MSPI_SEL(x) (x)->pad_misc_config_register.pad_misc_config_u.bits.mspi_sel
#define f1000_pad_ctrl_regs_GPIO_SEL(x) (x)->pad_misc_config_register.pad_misc_config_u.bits.gpio_sel
typedef volatile struct pad_misc_config_s {
	union {
		struct {
			unsigned int i2c_pad_cfg : 5;
			unsigned int mspi_pad_cfg : 5;
			unsigned int sspi_pad_cfg : 5;
			unsigned int uart_pad_cfg : 5;
			unsigned int global_pad_cfg : 3;
			unsigned int jtag_sel : 1;
			unsigned int i2c_sel : 1;
			unsigned int mspi_sel : 1;
			unsigned int gpio_sel : 1;
		} bits;
		uint32_t pad_misc_config;
	} pad_misc_config_u;
} pad_misc_config_t;
#endif /* __PAD_MISC_CONFIG__ */

#ifndef __PAD_GPIO_CONFIG0__
#define __PAD_GPIO_CONFIG0__
#define PAD_GPIO_CONFIG0(x) (x)->pad_gpio_config0_register.pad_gpio_config0_u.pad_gpio_config0
#define f1000_pad_ctrl_regs_GPIO_PAD_CFG_00(x) (x)->pad_gpio_config0_register.pad_gpio_config0_u.bits.gpio_pad_cfg_00
#define f1000_pad_ctrl_regs_GPIO_PAD_CFG_01(x) (x)->pad_gpio_config0_register.pad_gpio_config0_u.bits.gpio_pad_cfg_01
#define f1000_pad_ctrl_regs_GPIO_PAD_CFG_02(x) (x)->pad_gpio_config0_register.pad_gpio_config0_u.bits.gpio_pad_cfg_02
#define f1000_pad_ctrl_regs_GPIO_PAD_CFG_03(x) (x)->pad_gpio_config0_register.pad_gpio_config0_u.bits.gpio_pad_cfg_03
typedef volatile struct pad_gpio_config0_s {
	union {
		struct {
			unsigned int gpio_pad_cfg_00 : 5;
			unsigned int gpio_pad_cfg_01 : 5;
			unsigned int gpio_pad_cfg_02 : 5;
			unsigned int gpio_pad_cfg_03 : 5;
		} bits;
		uint32_t pad_gpio_config0;
	} pad_gpio_config0_u;
} pad_gpio_config0_t;
#endif /* __PAD_GPIO_CONFIG0__ */

#ifndef __PAD_GPIO_CONFIG1__
#define __PAD_GPIO_CONFIG1__
#define PAD_GPIO_CONFIG1(x) (x)->pad_gpio_config1_register.pad_gpio_config1_u.pad_gpio_config1
#define f1000_pad_ctrl_regs_GPIO_PAD_CFG_04(x) (x)->pad_gpio_config1_register.pad_gpio_config1_u.bits.gpio_pad_cfg_04
#define f1000_pad_ctrl_regs_GPIO_PAD_CFG_05(x) (x)->pad_gpio_config1_register.pad_gpio_config1_u.bits.gpio_pad_cfg_05
#define f1000_pad_ctrl_regs_GPIO_PAD_CFG_06(x) (x)->pad_gpio_config1_register.pad_gpio_config1_u.bits.gpio_pad_cfg_06
#define f1000_pad_ctrl_regs_GPIO_PAD_CFG_07(x) (x)->pad_gpio_config1_register.pad_gpio_config1_u.bits.gpio_pad_cfg_07
typedef volatile struct pad_gpio_config1_s {
	union {
		struct {
			unsigned int gpio_pad_cfg_04 : 5;
			unsigned int gpio_pad_cfg_05 : 5;
			unsigned int gpio_pad_cfg_06 : 5;
			unsigned int gpio_pad_cfg_07 : 5;
		} bits;
		uint32_t pad_gpio_config1;
	} pad_gpio_config1_u;
} pad_gpio_config1_t;
#endif /* __PAD_GPIO_CONFIG1__ */

#ifndef __PAD_GPIO_CONFIG2__
#define __PAD_GPIO_CONFIG2__
#define PAD_GPIO_CONFIG2(x) (x)->pad_gpio_config2_register.pad_gpio_config2_u.pad_gpio_config2
#define f1000_pad_ctrl_regs_GPIO_PAD_CFG_08(x) (x)->pad_gpio_config2_register.pad_gpio_config2_u.bits.gpio_pad_cfg_08
#define f1000_pad_ctrl_regs_GPIO_PAD_CFG_09(x) (x)->pad_gpio_config2_register.pad_gpio_config2_u.bits.gpio_pad_cfg_09
#define f1000_pad_ctrl_regs_GPIO_PAD_CFG_10(x) (x)->pad_gpio_config2_register.pad_gpio_config2_u.bits.gpio_pad_cfg_10
#define f1000_pad_ctrl_regs_GPIO_PAD_CFG_11(x) (x)->pad_gpio_config2_register.pad_gpio_config2_u.bits.gpio_pad_cfg_11
typedef volatile struct pad_gpio_config2_s {
	union {
		struct {
			unsigned int gpio_pad_cfg_08 : 5;
			unsigned int gpio_pad_cfg_09 : 5;
			unsigned int gpio_pad_cfg_10 : 5;
			unsigned int gpio_pad_cfg_11 : 5;
		} bits;
		uint32_t pad_gpio_config2;
	} pad_gpio_config2_u;
} pad_gpio_config2_t;
#endif /* __PAD_GPIO_CONFIG2__ */

#ifndef __PAD_GPIO_CONFIG3__
#define __PAD_GPIO_CONFIG3__
#define PAD_GPIO_CONFIG3(x) (x)->pad_gpio_config3_register.pad_gpio_config3_u.pad_gpio_config3
#define f1000_pad_ctrl_regs_GPIO_PAD_CFG_12(x) (x)->pad_gpio_config3_register.pad_gpio_config3_u.bits.gpio_pad_cfg_12
#define f1000_pad_ctrl_regs_GPIO_PAD_CFG_13(x) (x)->pad_gpio_config3_register.pad_gpio_config3_u.bits.gpio_pad_cfg_13
#define f1000_pad_ctrl_regs_GPIO_PAD_CFG_14(x) (x)->pad_gpio_config3_register.pad_gpio_config3_u.bits.gpio_pad_cfg_14
#define f1000_pad_ctrl_regs_GPIO_PAD_CFG_15(x) (x)->pad_gpio_config3_register.pad_gpio_config3_u.bits.gpio_pad_cfg_15
typedef volatile struct pad_gpio_config3_s {
	union {
		struct {
			unsigned int gpio_pad_cfg_12 : 5;
			unsigned int gpio_pad_cfg_13 : 5;
			unsigned int gpio_pad_cfg_14 : 5;
			unsigned int gpio_pad_cfg_15 : 5;
		} bits;
		uint32_t pad_gpio_config3;
	} pad_gpio_config3_u;
} pad_gpio_config3_t;
#endif /* __PAD_GPIO_CONFIG3__ */

#ifndef __PAD_MUX_CONFIG__
#define __PAD_MUX_CONFIG__
#define PAD_MUX_CONFIG(x) (x)->pad_mux_config_register.pad_mux_config_u.pad_mux_config
#define f1000_pad_ctrl_regs_PAD_MUX_CFG(x) (x)->pad_mux_config_register.pad_mux_config_u.bits.pad_mux_cfg
typedef volatile struct pad_mux_config_s {
	union {
		struct {
			unsigned int pad_mux_cfg : 3;
		} bits;
		uint32_t pad_mux_config;
	} pad_mux_config_u;
} pad_mux_config_t;
#endif /* __PAD_MUX_CONFIG__ */

#ifndef __CLK_RECV_CONFIG1__
#define __CLK_RECV_CONFIG1__
#define CLK_RECV_CONFIG1(x) (x)->clk_recv_config1_register.clk_recv_config1_u.clk_recv_config1
#define f1000_pad_ctrl_regs_EN_SYSREF_TERM(x) (x)->clk_recv_config1_register.clk_recv_config1_u.bits.en_sysref_term
#define f1000_pad_ctrl_regs_EN_CLK_TERM(x) (x)->clk_recv_config1_register.clk_recv_config1_u.bits.en_clk_term
#define f1000_pad_ctrl_regs_CLK_CM_CTRL(x) (x)->clk_recv_config1_register.clk_recv_config1_u.bits.clk_cm_ctrl
#define f1000_pad_ctrl_regs_RESERVED_7_4(x) (x)->clk_recv_config1_register.clk_recv_config1_u.bits.reserved_7_4
#define f1000_pad_ctrl_regs_CTRL_PKDET0(x) (x)->clk_recv_config1_register.clk_recv_config1_u.bits.ctrl_pkdet0
#define f1000_pad_ctrl_regs_CTRL_PKDET1(x) (x)->clk_recv_config1_register.clk_recv_config1_u.bits.ctrl_pkdet1
#define f1000_pad_ctrl_regs_EN_PEAK_DET(x) (x)->clk_recv_config1_register.clk_recv_config1_u.bits.en_peak_det
#define f1000_pad_ctrl_regs_DIV_SEL(x) (x)->clk_recv_config1_register.clk_recv_config1_u.bits.div_sel
#define f1000_pad_ctrl_regs_SYSREF_ALIGN_TRIG_N(x) (x)->clk_recv_config1_register.clk_recv_config1_u.bits.sysref_align_trig_n
#define f1000_pad_ctrl_regs_RESERVED_7_16(x) (x)->clk_recv_config1_register.clk_recv_config1_u.bits.reserved_7_16
#define f1000_pad_ctrl_regs_CLK_RECEIVER_ATEST_CTRL(x) (x)->clk_recv_config1_register.clk_recv_config1_u.bits.clk_receiver_atest_ctrl
typedef volatile struct clk_recv_config1_s {
	union {
		struct {
			unsigned int en_sysref_term : 1;
			unsigned int en_clk_term : 1;
			unsigned int clk_cm_ctrl : 2;
			unsigned int reserved_7_4 : 4;
			unsigned int ctrl_pkdet0 : 2;
			unsigned int ctrl_pkdet1 : 2;
			unsigned int en_peak_det : 1;
			unsigned int div_sel : 2;
			unsigned int sysref_align_trig_n : 1;
			unsigned int reserved_7_16 : 6;
			unsigned int clk_receiver_atest_ctrl : 10;
		} bits;
		uint32_t clk_recv_config1;
	} clk_recv_config1_u;
} clk_recv_config1_t;
#endif /* __CLK_RECV_CONFIG1__ */

#ifndef __CLK_RECV_CONFIG2__
#define __CLK_RECV_CONFIG2__
#define CLK_RECV_CONFIG2(x) (x)->clk_recv_config2_register.clk_recv_config2_u.clk_recv_config2
#define f1000_pad_ctrl_regs_LDO_EN(x) (x)->clk_recv_config2_register.clk_recv_config2_u.bits.ldo_en
#define f1000_pad_ctrl_regs_CLAMP_EN(x) (x)->clk_recv_config2_register.clk_recv_config2_u.bits.clamp_en
#define f1000_pad_ctrl_regs_LDO_VSET(x) (x)->clk_recv_config2_register.clk_recv_config2_u.bits.ldo_vset
#define f1000_pad_ctrl_regs_REF_SEL(x) (x)->clk_recv_config2_register.clk_recv_config2_u.bits.ref_sel
#define f1000_pad_ctrl_regs_LDO_VSET_LSB(x) (x)->clk_recv_config2_register.clk_recv_config2_u.bits.ldo_vset_lsb
#define f1000_pad_ctrl_regs_VSET_FINE(x) (x)->clk_recv_config2_register.clk_recv_config2_u.bits.vset_fine
#define f1000_pad_ctrl_regs_CTRL_STGI(x) (x)->clk_recv_config2_register.clk_recv_config2_u.bits.ctrl_stgi
#define f1000_pad_ctrl_regs_CTRL_STGII(x) (x)->clk_recv_config2_register.clk_recv_config2_u.bits.ctrl_stgii
#define f1000_pad_ctrl_regs_RESERVED_8_15(x) (x)->clk_recv_config2_register.clk_recv_config2_u.bits.reserved_8_15
#define f1000_pad_ctrl_regs_SYSREF_DELAY(x) (x)->clk_recv_config2_register.clk_recv_config2_u.bits.sysref_delay
#define f1000_pad_ctrl_regs_ADC_SYSREF_MODE(x) (x)->clk_recv_config2_register.clk_recv_config2_u.bits.adc_sysref_mode
#define f1000_pad_ctrl_regs_ADC_SYSREF_EN(x) (x)->clk_recv_config2_register.clk_recv_config2_u.bits.adc_sysref_en
#define f1000_pad_ctrl_regs_DAC_SYSREF_MODE(x) (x)->clk_recv_config2_register.clk_recv_config2_u.bits.dac_sysref_mode
#define f1000_pad_ctrl_regs_DAC_SYSREF_EN(x) (x)->clk_recv_config2_register.clk_recv_config2_u.bits.dac_sysref_en
#define f1000_pad_ctrl_regs_RESERVED_8_24(x) (x)->clk_recv_config2_register.clk_recv_config2_u.bits.reserved_8_24
typedef volatile struct clk_recv_config2_s {
	union {
		struct {
			unsigned int ldo_en : 1;
			unsigned int clamp_en : 1;
			unsigned int ldo_vset : 4;
			unsigned int ref_sel : 1;
			unsigned int ldo_vset_lsb : 1;
			unsigned int vset_fine : 1;
			unsigned int ctrl_stgI : 3;
			unsigned int ctrl_stgII : 3;
			unsigned int reserved_8_15 : 1;
			unsigned int sysref_delay : 4;
			unsigned int adc_sysref_mode : 1;
			unsigned int adc_sysref_en : 1;
			unsigned int dac_sysref_mode : 1;
			unsigned int dac_sysref_en : 1;
			unsigned int reserved_8_24 : 8;
		} bits;
		uint32_t clk_recv_config2;
	} clk_recv_config2_u;
} clk_recv_config2_t;
#endif /* __CLK_RECV_CONFIG2__ */

#ifndef __CLK_RECV_STATUS__
#define __CLK_RECV_STATUS__
#define CLK_RECV_STATUS(x) (x)->clk_recv_status_register.clk_recv_status_u.clk_recv_status
#define f1000_pad_ctrl_regs_SYSREF_NOISY(x) (x)->clk_recv_status_register.clk_recv_status_u.bits.sysref_noisy
typedef volatile struct clk_recv_status_s {
	union {
		struct {
			unsigned int sysref_noisy : 1;
		} bits;
		uint32_t clk_recv_status;
	} clk_recv_status_u;
} clk_recv_status_t;
#endif /* __CLK_RECV_STATUS__ */

#ifndef __CLK_RX_PK_DET_REGS__
#define __CLK_RX_PK_DET_REGS__
#define CLK_RX_PK_DET_REGS(x) (x)->clk_rx_pk_det_regs_register.clk_rx_pk_det_regs_u.clk_rx_pk_det_regs
#define f1000_pad_ctrl_regs_CLK_REC_CTRL_PKDET(x) (x)->clk_rx_pk_det_regs_register.clk_rx_pk_det_regs_u.bits.clk_rec_ctrl_pkdet
#define f1000_pad_ctrl_regs_CLK_REC_PKDET_GP(x) (x)->clk_rx_pk_det_regs_register.clk_rx_pk_det_regs_u.bits.clk_rec_pkdet_gp
#define f1000_pad_ctrl_regs_CLK_REC_EN(x) (x)->clk_rx_pk_det_regs_register.clk_rx_pk_det_regs_u.bits.clk_rec_en
typedef volatile struct clk_rx_pk_det_regs_s {
	union {
		struct {
			unsigned int clk_rec_ctrl_pkdet : 5;
			unsigned int clk_rec_pkdet_gp : 3;
			unsigned int clk_rec_en : 1;
		} bits;
		uint32_t clk_rx_pk_det_regs;
	} clk_rx_pk_det_regs_u;
} clk_rx_pk_det_regs_t;
#endif /* __CLK_RX_PK_DET_REGS__ */

#ifndef __ANALOG_COMMON_CTRL__
#define __ANALOG_COMMON_CTRL__
#define ANALOG_COMMON_CTRL(x) (x)->analog_common_ctrl_register.analog_common_ctrl_u.analog_common_ctrl
#define f1000_pad_ctrl_regs_REF_SEL_V2I_EXT(x) (x)->analog_common_ctrl_register.analog_common_ctrl_u.bits.ref_sel_v2i_ext
#define f1000_pad_ctrl_regs_REF_SEL_V2I_INT(x) (x)->analog_common_ctrl_register.analog_common_ctrl_u.bits.ref_sel_v2i_int
#define f1000_pad_ctrl_regs_ATEST_SEL_V2I(x) (x)->analog_common_ctrl_register.analog_common_ctrl_u.bits.atest_sel_v2i
#define f1000_pad_ctrl_regs_RESERVED_10_3(x) (x)->analog_common_ctrl_register.analog_common_ctrl_u.bits.reserved_10_3
typedef volatile struct analog_common_ctrl_s {
	union {
		struct {
			unsigned int ref_sel_v2i_ext : 1;
			unsigned int ref_sel_v2i_int : 1;
			unsigned int atest_sel_v2i : 1;
			unsigned int reserved_10_3 : 13;
		} bits;
		uint32_t analog_common_ctrl;
	} analog_common_ctrl_u;
} analog_common_ctrl_t;
#endif /* __ANALOG_COMMON_CTRL__ */

#ifndef __ANALOG_BGAP_CTRL__
#define __ANALOG_BGAP_CTRL__
#define ANALOG_BGAP_CTRL(x) (x)->analog_bgap_ctrl_register.analog_bgap_ctrl_u.analog_bgap_ctrl
#define f1000_pad_ctrl_regs_ANA_BG_EN_I(x) (x)->analog_bgap_ctrl_register.analog_bgap_ctrl_u.bits.ana_bg_en_i
#define f1000_pad_ctrl_regs_ANA_BG_FORCE(x) (x)->analog_bgap_ctrl_register.analog_bgap_ctrl_u.bits.ana_bg_force
#define f1000_pad_ctrl_regs_ANA_BG_CAL_VREF(x) (x)->analog_bgap_ctrl_register.analog_bgap_ctrl_u.bits.ana_bg_cal_vref
#define f1000_pad_ctrl_regs_ANA_BG_CAL_TC(x) (x)->analog_bgap_ctrl_register.analog_bgap_ctrl_u.bits.ana_bg_cal_tc
typedef volatile struct analog_bgap_ctrl_s {
	union {
		struct {
			unsigned int ana_bg_en_i : 1;
			unsigned int ana_bg_force : 1;
			unsigned int ana_bg_cal_vref : 4;
			unsigned int ana_bg_cal_tc : 4;
		} bits;
		uint32_t analog_bgap_ctrl;
	} analog_bgap_ctrl_u;
} analog_bgap_ctrl_t;
#endif /* __ANALOG_BGAP_CTRL__ */

#ifndef __SERDES_PHY_COMMON_CTRL__
#define __SERDES_PHY_COMMON_CTRL__
#define SERDES_PHY_COMMON_CTRL(x) (x)->serdes_phy_common_ctrl_register.serdes_phy_common_ctrl_u.serdes_phy_common_ctrl
#define f1000_pad_ctrl_regs_SPHY_COMMON_CTRL(x) (x)->serdes_phy_common_ctrl_register.serdes_phy_common_ctrl_u.bits.sphy_common_ctrl
typedef volatile struct serdes_phy_common_ctrl_s {
	union {
		struct {
			unsigned int sphy_common_ctrl : 16;
		} bits;
		uint32_t serdes_phy_common_ctrl;
	} serdes_phy_common_ctrl_u;
} serdes_phy_common_ctrl_t;
#endif /* __SERDES_PHY_COMMON_CTRL__ */

#ifndef __SERDES_PHY_BGAP_CTRL__
#define __SERDES_PHY_BGAP_CTRL__
#define SERDES_PHY_BGAP_CTRL(x) (x)->serdes_phy_bgap_ctrl_register.serdes_phy_bgap_ctrl_u.serdes_phy_bgap_ctrl
#define f1000_pad_ctrl_regs_SPHY_BG_EN_I(x) (x)->serdes_phy_bgap_ctrl_register.serdes_phy_bgap_ctrl_u.bits.sphy_bg_en_i
#define f1000_pad_ctrl_regs_SPHY_BG_FORCE(x) (x)->serdes_phy_bgap_ctrl_register.serdes_phy_bgap_ctrl_u.bits.sphy_bg_force
#define f1000_pad_ctrl_regs_SPHY_BG_CAL_VREF(x) (x)->serdes_phy_bgap_ctrl_register.serdes_phy_bgap_ctrl_u.bits.sphy_bg_cal_vref
#define f1000_pad_ctrl_regs_SPHY_BG_CAL_TC(x) (x)->serdes_phy_bgap_ctrl_register.serdes_phy_bgap_ctrl_u.bits.sphy_bg_cal_tc
typedef volatile struct serdes_phy_bgap_ctrl_s {
	union {
		struct {
			unsigned int sphy_bg_en_i : 1;
			unsigned int sphy_bg_force : 1;
			unsigned int sphy_bg_cal_vref : 4;
			unsigned int sphy_bg_cal_tc : 4;
		} bits;
		uint32_t serdes_phy_bgap_ctrl;
	} serdes_phy_bgap_ctrl_u;
} serdes_phy_bgap_ctrl_t;
#endif /* __SERDES_PHY_BGAP_CTRL__ */

typedef struct f1000_pad_ctrl_regs_s
{
	boot_mode_t boot_mode_register;	// Address: 0x0
	pad_misc_config_t pad_misc_config_register;	// Address: 0x1
	pad_gpio_config0_t pad_gpio_config0_register;	// Address: 0x2
	pad_gpio_config1_t pad_gpio_config1_register;	// Address: 0x3
	pad_gpio_config2_t pad_gpio_config2_register;	// Address: 0x4
	pad_gpio_config3_t pad_gpio_config3_register;	// Address: 0x5
	pad_mux_config_t pad_mux_config_register;	// Address: 0x6
	clk_recv_config1_t clk_recv_config1_register;	// Address: 0x7
	clk_recv_config2_t clk_recv_config2_register;	// Address: 0x8
	clk_recv_status_t clk_recv_status_register;	// Address: 0x9
	clk_rx_pk_det_regs_t clk_rx_pk_det_regs_register;	// Address: 0xa
	analog_common_ctrl_t analog_common_ctrl_register;	// Address: 0xb
	analog_bgap_ctrl_t analog_bgap_ctrl_register;	// Address: 0xc
	serdes_phy_common_ctrl_t serdes_phy_common_ctrl_register;	// Address: 0xd
	serdes_phy_bgap_ctrl_t serdes_phy_bgap_ctrl_register;	// Address: 0xe
} f1000_pad_ctrl_regs_t;

#endif /* __F1000_PAD_CTRL_REGS_REGISTERS__ */
