//*******************************************************************************
//      __  __                                                                  *
//     /  \/  \                                                                 *
//         \   \                                                                *
//    I Q - A N A L O G                                                         *
//           \   \            IQ-Analog Corp                                    *
//            \__/\__/       www.iqanalog.com                                   *
//                                                                              *
//------------------------------------------------------------------------------*
//                                                                              *
// Copyright (C) 2018-2019 IQ-Analog Corp. All rights reserved.                 *
//                                                                              *
//------------------------------------------------------------------------------*
// IQ-Analog CONFIDENTIAL                                                       *
//------------------------------------------------------------------------------*
//                                                                              *
// This file is released with "Government Purpose Rights" as defined            *
// in DFARS SUBPART 227.71, clause 252.227-7013.                                *
//                                                                              *
//*******************************************************************************

// Generated by RMM v3.1.4
// IQ-Analog Corp. 2013-2018.

#ifndef __IMOLA_RX_LANE_FRAMER_REGS__
#define __IMOLA_RX_LANE_FRAMER_REGS__

#ifndef __RX_LANE_FRAMER_CONTROL__
#define __RX_LANE_FRAMER_CONTROL__
#define RX_LANE_FRAMER_CONTROL(x) (x)->rx_lane_framer_control_register.rx_lane_framer_control_u.rx_lane_framer_control
#define imola_rx_lane_framer_regs_RX_LANE_FRAMER_SW_RST_N(x) (x)->rx_lane_framer_control_register.rx_lane_framer_control_u.bits.rx_lane_framer_sw_rst_n
#define imola_rx_lane_framer_regs_ZERO_LL2TL_FIFO_OUT(x) (x)->rx_lane_framer_control_register.rx_lane_framer_control_u.bits.zero_ll2tl_fifo_out
#define imola_rx_lane_framer_regs_USE_DAC_TEST_SAMP(x) (x)->rx_lane_framer_control_register.rx_lane_framer_control_u.bits.use_dac_test_samp
#define imola_rx_lane_framer_regs_OOBREG_RDADDR(x) (x)->rx_lane_framer_control_register.rx_lane_framer_control_u.bits.oobreg_rdaddr
#define imola_rx_lane_framer_regs_RX_LANE_FIFO_RD_THRESHOLD(x) (x)->rx_lane_framer_control_register.rx_lane_framer_control_u.bits.rx_lane_fifo_rd_threshold
#define imola_rx_lane_framer_regs_LL2TL_DATA_SWAP_MSB_LSB(x) (x)->rx_lane_framer_control_register.rx_lane_framer_control_u.bits.ll2tl_data_swap_msb_lsb
typedef volatile struct rx_lane_framer_control_s {
	union {
		struct {
			unsigned int rx_lane_framer_sw_rst_n : 1;
			unsigned int zero_ll2tl_fifo_out : 1;
			unsigned int use_dac_test_samp : 1;
			unsigned int oobreg_rdAddr : 4;
			unsigned int rx_lane_fifo_rd_threshold : 6;
			unsigned int ll2tl_data_swap_msb_lsb : 1;
		} bits;
		uint32_t rx_lane_framer_control;
	} rx_lane_framer_control_u;
} rx_lane_framer_control_t;
#endif /* __RX_LANE_FRAMER_CONTROL__ */

#ifndef __RX_LANE_AND_FRAMER_FIFO_STATUS__
#define __RX_LANE_AND_FRAMER_FIFO_STATUS__
#define RX_LANE_AND_FRAMER_FIFO_STATUS(x) (x)->rx_lane_and_framer_fifo_status_register.rx_lane_and_framer_fifo_status_u.rx_lane_and_framer_fifo_status
#define imola_rx_lane_framer_regs_RX_LANE_FIFO_EMPTY(x) (x)->rx_lane_and_framer_fifo_status_register.rx_lane_and_framer_fifo_status_u.bits.rx_lane_fifo_empty
#define imola_rx_lane_framer_regs_RX_LANE_FIFO_UNDERFLOW(x) (x)->rx_lane_and_framer_fifo_status_register.rx_lane_and_framer_fifo_status_u.bits.rx_lane_fifo_underflow
#define imola_rx_lane_framer_regs_RX_LANE_FIFO_FULL(x) (x)->rx_lane_and_framer_fifo_status_register.rx_lane_and_framer_fifo_status_u.bits.rx_lane_fifo_full
#define imola_rx_lane_framer_regs_RX_LANE_FIFO_OVERFLOW(x) (x)->rx_lane_and_framer_fifo_status_register.rx_lane_and_framer_fifo_status_u.bits.rx_lane_fifo_overflow
#define imola_rx_lane_framer_regs_RX_LANE_FIFO_COUNTER(x) (x)->rx_lane_and_framer_fifo_status_register.rx_lane_and_framer_fifo_status_u.bits.rx_lane_fifo_counter
#define imola_rx_lane_framer_regs_RX_FRAMER_FIFO_EMPTY(x) (x)->rx_lane_and_framer_fifo_status_register.rx_lane_and_framer_fifo_status_u.bits.rx_framer_fifo_empty
#define imola_rx_lane_framer_regs_RX_FRAMER_FIFO_UNDERFLOW(x) (x)->rx_lane_and_framer_fifo_status_register.rx_lane_and_framer_fifo_status_u.bits.rx_framer_fifo_underflow
#define imola_rx_lane_framer_regs_RX_FRAMER_FIFO_FULL(x) (x)->rx_lane_and_framer_fifo_status_register.rx_lane_and_framer_fifo_status_u.bits.rx_framer_fifo_full
#define imola_rx_lane_framer_regs_RX_FRAMER_FIFO_OVERFLOW(x) (x)->rx_lane_and_framer_fifo_status_register.rx_lane_and_framer_fifo_status_u.bits.rx_framer_fifo_overflow
#define imola_rx_lane_framer_regs_RX_FRAMER_FIFO_COUNTER(x) (x)->rx_lane_and_framer_fifo_status_register.rx_lane_and_framer_fifo_status_u.bits.rx_framer_fifo_counter
#define imola_rx_lane_framer_regs_LL2TL_FIFO_RD_ADDR_OUT(x) (x)->rx_lane_and_framer_fifo_status_register.rx_lane_and_framer_fifo_status_u.bits.ll2tl_fifo_rd_addr_out
#define imola_rx_lane_framer_regs_LL2TL_FIFO_WR_ADDR_OUT(x) (x)->rx_lane_and_framer_fifo_status_register.rx_lane_and_framer_fifo_status_u.bits.ll2tl_fifo_wr_addr_out
#define imola_rx_lane_framer_regs_ERROR_IN_LL2TL_FIFO_OUT(x) (x)->rx_lane_and_framer_fifo_status_register.rx_lane_and_framer_fifo_status_u.bits.error_in_ll2tl_fifo_out
#define imola_rx_lane_framer_regs_ERROR_IN_LL2TL_FIFO_OUT_OOBMODE(x) (x)->rx_lane_and_framer_fifo_status_register.rx_lane_and_framer_fifo_status_u.bits.error_in_ll2tl_fifo_out_oobmode
#define imola_rx_lane_framer_regs_RCHD_LL2TL_FIFO_THRESH(x) (x)->rx_lane_and_framer_fifo_status_register.rx_lane_and_framer_fifo_status_u.bits.rchd_ll2tl_fifo_thresh
#define imola_rx_lane_framer_regs_RX_LANE_FIFO_READ_READY(x) (x)->rx_lane_and_framer_fifo_status_register.rx_lane_and_framer_fifo_status_u.bits.rx_lane_fifo_read_ready
#define imola_rx_lane_framer_regs_FST_WAIT_COMPLETE(x) (x)->rx_lane_and_framer_fifo_status_register.rx_lane_and_framer_fifo_status_u.bits.fst_wait_complete
#define imola_rx_lane_framer_regs_FST_WAIT_OPCODE_TRIGGERS(x) (x)->rx_lane_and_framer_fifo_status_register.rx_lane_and_framer_fifo_status_u.bits.fst_wait_opcode_triggers
typedef volatile struct rx_lane_and_framer_fifo_status_s {
	union {
		struct {
			unsigned int rx_lane_fifo_empty : 1;
			unsigned int rx_lane_fifo_underflow : 1;
			unsigned int rx_lane_fifo_full : 1;
			unsigned int rx_lane_fifo_overflow : 1;
			unsigned int rx_lane_fifo_counter : 6;
			unsigned int rx_framer_fifo_empty : 1;
			unsigned int rx_framer_fifo_underflow : 1;
			unsigned int rx_framer_fifo_full : 1;
			unsigned int rx_framer_fifo_overflow : 1;
			unsigned int rx_framer_fifo_counter : 4;
			unsigned int ll2tl_fifo_rd_addr_out : 4;
			unsigned int ll2tl_fifo_wr_addr_out : 4;
			unsigned int error_in_ll2tl_fifo_out : 1;
			unsigned int error_in_ll2tl_fifo_out_oobmode : 1;
			unsigned int rchd_ll2tl_fifo_thresh : 1;
			unsigned int rx_lane_fifo_read_ready : 1;
			unsigned int fst_wait_complete : 1;
			unsigned int fst_wait_opcode_triggers : 1;
		} bits;
		uint32_t rx_lane_and_framer_fifo_status;
	} rx_lane_and_framer_fifo_status_u;
} rx_lane_and_framer_fifo_status_t;
#endif /* __RX_LANE_AND_FRAMER_FIFO_STATUS__ */

#ifndef __OOBREG_RDDATA_LANE_DATA_FIFO_SHIFT_ERRORS__
#define __OOBREG_RDDATA_LANE_DATA_FIFO_SHIFT_ERRORS__
#define OOBREG_RDDATA_LANE_DATA_FIFO_SHIFT_ERRORS(x) (x)->oobreg_rddata_lane_data_fifo_shift_errors_register.oobreg_rddata_lane_data_fifo_shift_errors_u.oobreg_rddata_lane_data_fifo_shift_errors
#define imola_rx_lane_framer_regs_OOBREG_RDDATA(x) (x)->oobreg_rddata_lane_data_fifo_shift_errors_register.oobreg_rddata_lane_data_fifo_shift_errors_u.bits.oobreg_rddata
#define imola_rx_lane_framer_regs_RX_INVALID_DSP_D_WIDTH(x) (x)->oobreg_rddata_lane_data_fifo_shift_errors_register.oobreg_rddata_lane_data_fifo_shift_errors_u.bits.rx_invalid_dsp_d_width
#define imola_rx_lane_framer_regs_RX_RECV_I8_Q8_NO_DSP_WRITE(x) (x)->oobreg_rddata_lane_data_fifo_shift_errors_register.oobreg_rddata_lane_data_fifo_shift_errors_u.bits.rx_recv_i8_q8_no_dsp_write
#define imola_rx_lane_framer_regs_RX_RECV_Q12_I4_NO_DSP_WRITE(x) (x)->oobreg_rddata_lane_data_fifo_shift_errors_register.oobreg_rddata_lane_data_fifo_shift_errors_u.bits.rx_recv_q12_i4_no_dsp_write
#define imola_rx_lane_framer_regs_RX_RECV_Q16_NO_DSP_WRITE(x) (x)->oobreg_rddata_lane_data_fifo_shift_errors_register.oobreg_rddata_lane_data_fifo_shift_errors_u.bits.rx_recv_q16_no_dsp_write
typedef volatile struct oobreg_rddata_lane_data_fifo_shift_errors_s {
	union {
		struct {
			unsigned int oobreg_rdData : 16;
			unsigned int rx_invalid_dsp_d_width : 1;
			unsigned int rx_recv_i8_q8_no_dsp_write : 1;
			unsigned int rx_recv_q12_i4_no_dsp_write : 1;
			unsigned int rx_recv_q16_no_dsp_write : 1;
		} bits;
		uint32_t oobreg_rddata_lane_data_fifo_shift_errors;
	} oobreg_rddata_lane_data_fifo_shift_errors_u;
} oobreg_rddata_lane_data_fifo_shift_errors_t;
#endif /* __OOBREG_RDDATA_LANE_DATA_FIFO_SHIFT_ERRORS__ */

#ifndef __DAC_TEST_SAMP__
#define __DAC_TEST_SAMP__
#define DAC_TEST_SAMP(x) (x)->dac_test_samp_register.dac_test_samp_u.dac_test_samp
#define imola_rx_lane_framer_regs_DAC_TEST_SAMP(x) (x)->dac_test_samp_register.dac_test_samp_u.bits.dac_test_samp
typedef volatile struct dac_test_samp_s {
	union {
		struct {
			unsigned int dac_test_samp : 32;
		} bits;
		uint32_t dac_test_samp;
	} dac_test_samp_u;
} dac_test_samp_t;
#endif /* __DAC_TEST_SAMP__ */

typedef struct imola_rx_lane_framer_regs_s
{
	rx_lane_framer_control_t rx_lane_framer_control_register;	// Address: 0x0
	rx_lane_and_framer_fifo_status_t rx_lane_and_framer_fifo_status_register;	// Address: 0x1
	oobreg_rddata_lane_data_fifo_shift_errors_t oobreg_rddata_lane_data_fifo_shift_errors_register;	// Address: 0x2
	dac_test_samp_t dac_test_samp_register;	// Address: 0x3
} imola_rx_lane_framer_regs_t;

#endif /* __IMOLA_RX_LANE_FRAMER_REGS__ */
