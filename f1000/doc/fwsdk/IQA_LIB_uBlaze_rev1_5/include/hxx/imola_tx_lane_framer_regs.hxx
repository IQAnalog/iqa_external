//*******************************************************************************
//      __  __                                                                  *
//     /  \/  \                                                                 *
//         \   \                                                                *
//    I Q - A N A L O G                                                         *
//           \   \            IQ-Analog Corp                                    *
//            \__/\__/       www.iqanalog.com                                   *
//                                                                              *
//------------------------------------------------------------------------------*
//                                                                              *
// Copyright (C) 2018-2019 IQ-Analog Corp. All rights reserved.                 *
//                                                                              *
//------------------------------------------------------------------------------*
// IQ-Analog CONFIDENTIAL                                                       *
//------------------------------------------------------------------------------*
//                                                                              *
// This file is released with "Government Purpose Rights" as defined            *
// in DFARS SUBPART 227.71, clause 252.227-7013.                                *
//                                                                              *
//*******************************************************************************

// Generated by RMM v3.1.4
// IQ-Analog Corp. 2013-2018.

#ifndef __IMOLA_TX_LANE_FRAMER_REGS__
#define __IMOLA_TX_LANE_FRAMER_REGS__

#ifndef __TX_LANE_FRAMER_CONTROL__
#define __TX_LANE_FRAMER_CONTROL__
#define TX_LANE_FRAMER_CONTROL(x) (x)->tx_lane_framer_control_register.tx_lane_framer_control_u.tx_lane_framer_control
#define imola_tx_lane_framer_regs_TX_LANE_FRAMER_SW_RST_N(x) (x)->tx_lane_framer_control_register.tx_lane_framer_control_u.bits.tx_lane_framer_sw_rst_n
typedef volatile struct tx_lane_framer_control_s {
	union {
		struct {
			unsigned int tx_lane_framer_sw_rst_n : 1;
		} bits;
		uint32_t tx_lane_framer_control;
	} tx_lane_framer_control_u;
} tx_lane_framer_control_t;
#endif /* __TX_LANE_FRAMER_CONTROL__ */

#ifndef __LANE_FIFO_STATUS_REGISTER__
#define __LANE_FIFO_STATUS_REGISTER__
#define LANE_FIFO_STATUS_REGISTER(x) (x)->lane_fifo_status_register_register.lane_fifo_status_register_u.lane_fifo_status_register
#define imola_tx_lane_framer_regs_TX_LANE_FIFO_EMPTY(x) (x)->lane_fifo_status_register_register.lane_fifo_status_register_u.bits.tx_lane_fifo_empty
#define imola_tx_lane_framer_regs_TX_LANE_FIFO_UNDERFLOW(x) (x)->lane_fifo_status_register_register.lane_fifo_status_register_u.bits.tx_lane_fifo_underflow
#define imola_tx_lane_framer_regs_TX_LANE_FIFO_FULL(x) (x)->lane_fifo_status_register_register.lane_fifo_status_register_u.bits.tx_lane_fifo_full
#define imola_tx_lane_framer_regs_TX_LANE_FIFO_OVERFLOW(x) (x)->lane_fifo_status_register_register.lane_fifo_status_register_u.bits.tx_lane_fifo_overflow
#define imola_tx_lane_framer_regs_TX_LANE_FIFO_COUNTER(x) (x)->lane_fifo_status_register_register.lane_fifo_status_register_u.bits.tx_lane_fifo_counter
#define imola_tx_lane_framer_regs_TX_FRAMER_FIFO_EMPTY(x) (x)->lane_fifo_status_register_register.lane_fifo_status_register_u.bits.tx_framer_fifo_empty
#define imola_tx_lane_framer_regs_TX_FRAMER_FIFO_UNDERFLOW(x) (x)->lane_fifo_status_register_register.lane_fifo_status_register_u.bits.tx_framer_fifo_underflow
#define imola_tx_lane_framer_regs_TX_FRAMER_FIFO_FULL(x) (x)->lane_fifo_status_register_register.lane_fifo_status_register_u.bits.tx_framer_fifo_full
#define imola_tx_lane_framer_regs_TX_FRAMER_FIFO_OVERFLOW(x) (x)->lane_fifo_status_register_register.lane_fifo_status_register_u.bits.tx_framer_fifo_overflow
#define imola_tx_lane_framer_regs_TX_FRAMER_FIFO_COUNTER(x) (x)->lane_fifo_status_register_register.lane_fifo_status_register_u.bits.tx_framer_fifo_counter
#define imola_tx_lane_framer_regs_TL2LL_FIFO_RD_ADDR_OUT(x) (x)->lane_fifo_status_register_register.lane_fifo_status_register_u.bits.tl2ll_fifo_rd_addr_out
#define imola_tx_lane_framer_regs_TL2LL_FIFO_WR_ADDR_OUT(x) (x)->lane_fifo_status_register_register.lane_fifo_status_register_u.bits.tl2ll_fifo_wr_addr_out
#define imola_tx_lane_framer_regs_RCHD_TL2LL_FIFO_THRESH(x) (x)->lane_fifo_status_register_register.lane_fifo_status_register_u.bits.rchd_tl2ll_fifo_thresh
#define imola_tx_lane_framer_regs_TX_INVALID_DSP_D_WIDTH(x) (x)->lane_fifo_status_register_register.lane_fifo_status_register_u.bits.tx_invalid_dsp_d_width
#define imola_tx_lane_framer_regs_TX_SEND_24B_LSB_8_SAVE_8_NO_DSP_READ(x) (x)->lane_fifo_status_register_register.lane_fifo_status_register_u.bits.tx_send_24b_lsb_8_save_8_no_dsp_read
#define imola_tx_lane_framer_regs_TX_SEND_24B_MSB_16_NO_DSP_READ(x) (x)->lane_fifo_status_register_register.lane_fifo_status_register_u.bits.tx_send_24b_msb_16_no_dsp_read
#define imola_tx_lane_framer_regs_TX_SEND_MSB_16_NO_DSP_READ(x) (x)->lane_fifo_status_register_register.lane_fifo_status_register_u.bits.tx_send_msb_16_no_dsp_read
typedef volatile struct lane_fifo_status_register_s {
	union {
		struct {
			unsigned int tx_lane_fifo_empty : 1;
			unsigned int tx_lane_fifo_underflow : 1;
			unsigned int tx_lane_fifo_full : 1;
			unsigned int tx_lane_fifo_overflow : 1;
			unsigned int tx_lane_fifo_counter : 6;
			unsigned int tx_framer_fifo_empty : 1;
			unsigned int tx_framer_fifo_underflow : 1;
			unsigned int tx_framer_fifo_full : 1;
			unsigned int tx_framer_fifo_overflow : 1;
			unsigned int tx_framer_fifo_counter : 4;
			unsigned int tl2ll_fifo_rd_addr_out : 4;
			unsigned int tl2ll_fifo_wr_addr_out : 4;
			unsigned int rchd_tl2ll_fifo_thresh : 1;
			unsigned int tx_invalid_dsp_d_width : 1;
			unsigned int tx_send_24b_lsb_8_save_8_no_dsp_read : 1;
			unsigned int tx_send_24b_msb_16_no_dsp_read : 1;
			unsigned int tx_send_msb_16_no_dsp_read : 1;
		} bits;
		uint32_t lane_fifo_status_register;
	} lane_fifo_status_register_u;
} lane_fifo_status_register_t;
#endif /* __LANE_FIFO_STATUS_REGISTER__ */

typedef struct imola_tx_lane_framer_regs_s
{
	tx_lane_framer_control_t tx_lane_framer_control_register;	// Address: 0x0
	lane_fifo_status_register_t lane_fifo_status_register_register;	// Address: 0x1
} imola_tx_lane_framer_regs_t;

#endif /* __IMOLA_TX_LANE_FRAMER_REGS__ */
