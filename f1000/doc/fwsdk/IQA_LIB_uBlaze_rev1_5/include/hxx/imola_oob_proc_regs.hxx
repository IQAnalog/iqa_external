//*******************************************************************************
//      __  __                                                                  *
//     /  \/  \                                                                 *
//         \   \                                                                *
//    I Q - A N A L O G                                                         *
//           \   \            IQ-Analog Corp                                    *
//            \__/\__/       www.iqanalog.com                                   *
//                                                                              *
//------------------------------------------------------------------------------*
//                                                                              *
// Copyright (C) 2018-2019 IQ-Analog Corp. All rights reserved.                 *
//                                                                              *
//------------------------------------------------------------------------------*
// IQ-Analog CONFIDENTIAL                                                       *
//------------------------------------------------------------------------------*
//                                                                              *
// This file is released with "Government Purpose Rights" as defined            *
// in DFARS SUBPART 227.71, clause 252.227-7013.                                *
//                                                                              *
//*******************************************************************************

// Generated by RMM v3.1.4
// IQ-Analog Corp. 2013-2018.

#ifndef __IMOLA_OOB_PROC_REGS__
#define __IMOLA_OOB_PROC_REGS__

#ifndef __OOB_PROC_CONTROL__
#define __OOB_PROC_CONTROL__
#define OOB_PROC_CONTROL(x) (x)->oob_proc_control_register.oob_proc_control_u.oob_proc_control
#define imola_oob_proc_regs_SW_RST_N(x) (x)->oob_proc_control_register.oob_proc_control_u.bits.sw_rst_n
#define imola_oob_proc_regs_ENABLE_FRAMER_CONTROLLER(x) (x)->oob_proc_control_register.oob_proc_control_u.bits.enable_framer_controller
typedef volatile struct oob_proc_control_s {
	union {
		struct {
			unsigned int sw_rst_n : 1;
			unsigned int enable_framer_controller : 1;
		} bits;
		uint32_t oob_proc_control;
	} oob_proc_control_u;
} oob_proc_control_t;
#endif /* __OOB_PROC_CONTROL__ */

#ifndef __OOB_PROC_STATUS__
#define __OOB_PROC_STATUS__
#define OOB_PROC_STATUS(x) (x)->oob_proc_status_register.oob_proc_status_u.oob_proc_status
#define imola_oob_proc_regs_DPTR_ADDR_REG(x) (x)->oob_proc_status_register.oob_proc_status_u.bits.dptr_addr_reg
#define imola_oob_proc_regs_APTR(x) (x)->oob_proc_status_register.oob_proc_status_u.bits.aptr
#define imola_oob_proc_regs_FEW_AXI_FIFO_WRITE(x) (x)->oob_proc_status_register.oob_proc_status_u.bits.few_axi_fifo_write
#define imola_oob_proc_regs_FEW_AXI_BUS_READ(x) (x)->oob_proc_status_register.oob_proc_status_u.bits.few_axi_bus_read
#define imola_oob_proc_regs_READY4WRITE(x) (x)->oob_proc_status_register.oob_proc_status_u.bits.ready4write
#define imola_oob_proc_regs_READY4READ(x) (x)->oob_proc_status_register.oob_proc_status_u.bits.ready4read
#define imola_oob_proc_regs_AXI_RD_DATA_VALID(x) (x)->oob_proc_status_register.oob_proc_status_u.bits.axi_rd_data_valid
#define imola_oob_proc_regs_AXI_RD_DATA_VALID_ACK(x) (x)->oob_proc_status_register.oob_proc_status_u.bits.axi_rd_data_valid_ack
#define imola_oob_proc_regs_AXI_WR_FIFO_FULL(x) (x)->oob_proc_status_register.oob_proc_status_u.bits.axi_wr_fifo_full
#define imola_oob_proc_regs_AXI_WR_FIFO_OVERFLOW(x) (x)->oob_proc_status_register.oob_proc_status_u.bits.axi_wr_fifo_overflow
#define imola_oob_proc_regs_AXI_WR_FIFO_EMPTY(x) (x)->oob_proc_status_register.oob_proc_status_u.bits.axi_wr_fifo_empty
#define imola_oob_proc_regs_AXI_WR_FIFO_UNDERFLOW(x) (x)->oob_proc_status_register.oob_proc_status_u.bits.axi_wr_fifo_underflow
#define imola_oob_proc_regs_LANE_ERROR_DETECT(x) (x)->oob_proc_status_register.oob_proc_status_u.bits.lane_error_detect
#define imola_oob_proc_regs_RST_TL2LL_FIFO(x) (x)->oob_proc_status_register.oob_proc_status_u.bits.rst_tl2ll_fifo
#define imola_oob_proc_regs_FST_WAIT_COMPLETE(x) (x)->oob_proc_status_register.oob_proc_status_u.bits.fst_wait_complete
#define imola_oob_proc_regs_FST_WAIT_OPCODE_TRIGGERS(x) (x)->oob_proc_status_register.oob_proc_status_u.bits.fst_wait_opcode_triggers
typedef volatile struct oob_proc_status_s {
	union {
		struct {
			unsigned int dptr_addr_reg : 6;
			unsigned int aptr : 5;
			unsigned int few_axi_fifo_write : 1;
			unsigned int few_axi_bus_read : 1;
			unsigned int ready4write : 1;
			unsigned int ready4read : 1;
			unsigned int axi_rd_data_valid : 1;
			unsigned int axi_rd_data_valid_ack : 1;
			unsigned int axi_wr_fifo_full : 1;
			unsigned int axi_wr_fifo_overflow : 1;
			unsigned int axi_wr_fifo_empty : 1;
			unsigned int axi_wr_fifo_underflow : 1;
			unsigned int lane_error_detect : 1;
			unsigned int rst_tl2ll_fifo : 1;
			unsigned int fst_wait_complete : 1;
			unsigned int fst_wait_opcode_triggers : 1;
		} bits;
		uint32_t oob_proc_status;
	} oob_proc_status_u;
} oob_proc_status_t;
#endif /* __OOB_PROC_STATUS__ */

#ifndef __OOB_REGS2DP__
#define __OOB_REGS2DP__
#define OOB_REGS2DP(x) (x)->oob_regs2dp_register.oob_regs2dp_u.oob_regs2dp
#define imola_oob_proc_regs_OOB_REGS2DP(x) (x)->oob_regs2dp_register.oob_regs2dp_u.bits.oob_regs2dp
typedef volatile struct oob_regs2dp_s {
	union {
		struct {
			unsigned int oob_regs2dp : 32;
		} bits;
		uint32_t oob_regs2dp;
	} oob_regs2dp_u;
} oob_regs2dp_t;
#endif /* __OOB_REGS2DP__ */

#ifndef __AXI_BUS_FIFO_WR_DATA__
#define __AXI_BUS_FIFO_WR_DATA__
#define AXI_BUS_FIFO_WR_DATA(x) (x)->axi_bus_fifo_wr_data_register.axi_bus_fifo_wr_data_u.axi_bus_fifo_wr_data
#define imola_oob_proc_regs_AXI_BUS_FIFO_WR_DATA(x) (x)->axi_bus_fifo_wr_data_register.axi_bus_fifo_wr_data_u.bits.axi_bus_fifo_wr_data
typedef volatile struct axi_bus_fifo_wr_data_s {
	union {
		struct {
			unsigned int axi_bus_fifo_wr_data : 32;
		} bits;
		uint32_t axi_bus_fifo_wr_data;
	} axi_bus_fifo_wr_data_u;
} axi_bus_fifo_wr_data_t;
#endif /* __AXI_BUS_FIFO_WR_DATA__ */

#ifndef __AXI_BUS_FIFO_RD_DATA__
#define __AXI_BUS_FIFO_RD_DATA__
#define AXI_BUS_FIFO_RD_DATA(x) (x)->axi_bus_fifo_rd_data_register.axi_bus_fifo_rd_data_u.axi_bus_fifo_rd_data
#define imola_oob_proc_regs_AXI_BUS_FIFO_RD_DATA(x) (x)->axi_bus_fifo_rd_data_register.axi_bus_fifo_rd_data_u.bits.axi_bus_fifo_rd_data
typedef volatile struct axi_bus_fifo_rd_data_s {
	union {
		struct {
			unsigned int axi_bus_fifo_rd_data : 32;
		} bits;
		uint32_t axi_bus_fifo_rd_data;
	} axi_bus_fifo_rd_data_u;
} axi_bus_fifo_rd_data_t;
#endif /* __AXI_BUS_FIFO_RD_DATA__ */

#ifndef __AXI_BUS_FIFO_ADDR__
#define __AXI_BUS_FIFO_ADDR__
#define AXI_BUS_FIFO_ADDR(x) (x)->axi_bus_fifo_addr_register.axi_bus_fifo_addr_u.axi_bus_fifo_addr
#define imola_oob_proc_regs_AXI_BUS_FIFO_ADDR(x) (x)->axi_bus_fifo_addr_register.axi_bus_fifo_addr_u.bits.axi_bus_fifo_addr
typedef volatile struct axi_bus_fifo_addr_s {
	union {
		struct {
			unsigned int axi_bus_fifo_addr : 32;
		} bits;
		uint32_t axi_bus_fifo_addr;
	} axi_bus_fifo_addr_u;
} axi_bus_fifo_addr_t;
#endif /* __AXI_BUS_FIFO_ADDR__ */

#ifndef __OOB_PROC_ERROR_BITS__
#define __OOB_PROC_ERROR_BITS__
#define OOB_PROC_ERROR_BITS(x) (x)->oob_proc_error_bits_register.oob_proc_error_bits_u.oob_proc_error_bits
#define imola_oob_proc_regs_AXI_WRITE_READ_BOTH_ON_ERR_BIT(x) (x)->oob_proc_error_bits_register.oob_proc_error_bits_u.bits.axi_write_read_both_on_err_bit
#define imola_oob_proc_regs_AXI_WRITE_WHEN_FIFO_FULL_ERR_BIT(x) (x)->oob_proc_error_bits_register.oob_proc_error_bits_u.bits.axi_write_when_fifo_full_err_bit
typedef volatile struct oob_proc_error_bits_s {
	union {
		struct {
			unsigned int axi_write_read_both_on_err_bit : 1;
			unsigned int axi_write_when_fifo_full_err_bit : 1;
		} bits;
		uint32_t oob_proc_error_bits;
	} oob_proc_error_bits_u;
} oob_proc_error_bits_t;
#endif /* __OOB_PROC_ERROR_BITS__ */

#ifndef __OOB_PROC_SELF_CLEAR_ERROR_BITS__
#define __OOB_PROC_SELF_CLEAR_ERROR_BITS__
#define OOB_PROC_SELF_CLEAR_ERROR_BITS(x) (x)->oob_proc_self_clear_error_bits_register.oob_proc_self_clear_error_bits_u.oob_proc_self_clear_error_bits
#define imola_oob_proc_regs_CL_AXI_WRITE_READ_BOTH_ON(x) (x)->oob_proc_self_clear_error_bits_register.oob_proc_self_clear_error_bits_u.bits.cl_axi_write_read_both_on
#define imola_oob_proc_regs_CL_AXI_WRITE_WHEN_FIFO_FULL(x) (x)->oob_proc_self_clear_error_bits_register.oob_proc_self_clear_error_bits_u.bits.cl_axi_write_when_fifo_full
typedef volatile struct oob_proc_self_clear_error_bits_s {
	union {
		struct {
			unsigned int cl_axi_write_read_both_on : 1;
			unsigned int cl_axi_write_when_fifo_full : 1;
		} bits;
		uint32_t oob_proc_self_clear_error_bits;
	} oob_proc_self_clear_error_bits_u;
} oob_proc_self_clear_error_bits_t;
#endif /* __OOB_PROC_SELF_CLEAR_ERROR_BITS__ */

#ifndef __OOB_REGS2PERIPH__
#define __OOB_REGS2PERIPH__
#define OOB_REGS2PERIPH(x) (x)->oob_regs2periph_register.oob_regs2periph_u.oob_regs2periph
#define imola_oob_proc_regs_OOB_REGS2PERIPH(x) (x)->oob_regs2periph_register.oob_regs2periph_u.bits.oob_regs2periph
typedef volatile struct oob_regs2periph_s {
	union {
		struct {
			unsigned int oob_regs2periph : 32;
		} bits;
		uint32_t oob_regs2periph;
	} oob_regs2periph_u;
} oob_regs2periph_t;
#endif /* __OOB_REGS2PERIPH__ */

#ifndef __FRAME_FMT_TABLE2PERIPH__
#define __FRAME_FMT_TABLE2PERIPH__
#define FRAME_FMT_TABLE2PERIPH(x) (x)->frame_fmt_table2periph_register.frame_fmt_table2periph_u.frame_fmt_table2periph
#define imola_oob_proc_regs_FRAME_FMT_TABLE2PERIPH(x) (x)->frame_fmt_table2periph_register.frame_fmt_table2periph_u.bits.frame_fmt_table2periph
typedef volatile struct frame_fmt_table2periph_s {
	union {
		struct {
			unsigned int frame_fmt_table2periph : 32;
		} bits;
		uint32_t frame_fmt_table2periph;
	} frame_fmt_table2periph_u;
} frame_fmt_table2periph_t;
#endif /* __FRAME_FMT_TABLE2PERIPH__ */

typedef struct imola_oob_proc_regs_s
{
	oob_proc_control_t oob_proc_control_register;	// Address: 0x0
	oob_proc_status_t oob_proc_status_register;	// Address: 0x1
	oob_regs2dp_t oob_regs2dp_register;	// Address: 0x2
	axi_bus_fifo_wr_data_t axi_bus_fifo_wr_data_register;	// Address: 0x3
	axi_bus_fifo_rd_data_t axi_bus_fifo_rd_data_register;	// Address: 0x4
	axi_bus_fifo_addr_t axi_bus_fifo_addr_register;	// Address: 0x5
	oob_proc_error_bits_t oob_proc_error_bits_register;	// Address: 0x6
	oob_proc_self_clear_error_bits_t oob_proc_self_clear_error_bits_register;	// Address: 0x7
	oob_regs2periph_t oob_regs2periph_register;	// Address: 0x8
	frame_fmt_table2periph_t frame_fmt_table2periph_register;	// Address: 0x9
} imola_oob_proc_regs_t;

#endif /* __IMOLA_OOB_PROC_REGS__ */
