//*******************************************************************************
//      __  __                                                                  *
//     /  \/  \                                                                 *
//         \   \                                                                *
//    I Q - A N A L O G                                                         *
//           \   \            IQ-Analog Corp                                    *
//            \__/\__/       www.iqanalog.com                                   *
//                                                                              *
//------------------------------------------------------------------------------*
//                                                                              *
// Copyright (C) 2018-2019 IQ-Analog Corp. All rights reserved.                 *
//                                                                              *
//------------------------------------------------------------------------------*
// IQ-Analog CONFIDENTIAL                                                       *
//------------------------------------------------------------------------------*
//                                                                              *
// This file is released with "Government Purpose Rights" as defined            *
// in DFARS SUBPART 227.71, clause 252.227-7013.                                *
//                                                                              *
//*******************************************************************************

// Generated by RMM v3.1.4
// IQ-Analog Corp. 2013-2018.

#ifndef __IMOLA_RX_REGISTERS__
#define __IMOLA_RX_REGISTERS__

#ifndef __RX_LINK_CONFIG__
#define __RX_LINK_CONFIG__
#define RX_LINK_CONFIG(x) (x)->rx_link_config_register.rx_link_config_u.rx_link_config
#define imola_rx_registers_SW_RST_N(x) (x)->rx_link_config_register.rx_link_config_u.bits.sw_rst_n
#define imola_rx_registers_FRAME_SIZE(x) (x)->rx_link_config_register.rx_link_config_u.bits.frame_size
#define imola_rx_registers_MULTIFRAME_SIZE(x) (x)->rx_link_config_register.rx_link_config_u.bits.multiframe_size
#define imola_rx_registers_SUBCLASS(x) (x)->rx_link_config_register.rx_link_config_u.bits.subclass
#define imola_rx_registers_DISABLE_RECONFIG(x) (x)->rx_link_config_register.rx_link_config_u.bits.disable_reconfig
#define imola_rx_registers_DISABLE_SYSREF_MONITOR(x) (x)->rx_link_config_register.rx_link_config_u.bits.disable_sysref_monitor
#define imola_rx_registers_DISABLE_SYSREF_REALIGN(x) (x)->rx_link_config_register.rx_link_config_u.bits.disable_sysref_realign
#define imola_rx_registers_FORCE_RESYNC(x) (x)->rx_link_config_register.rx_link_config_u.bits.force_resync
#define imola_rx_registers_HW_ENABLE_FRAMER_CONTROLLER(x) (x)->rx_link_config_register.rx_link_config_u.bits.hw_enable_framer_controller
#define imola_rx_registers_SHIFT_PING_PONG(x) (x)->rx_link_config_register.rx_link_config_u.bits.shift_ping_pong
#define imola_rx_registers_RD_LL2TL_FIFO_THRESHOLD(x) (x)->rx_link_config_register.rx_link_config_u.bits.rd_ll2tl_fifo_threshold
typedef volatile struct rx_link_config_s {
	union {
		struct {
			unsigned int sw_rst_n : 1;
			unsigned int frame_size : 5;
			unsigned int multiframe_size : 4;
			unsigned int subclass : 1;
			unsigned int disable_reconfig : 1;
			unsigned int disable_sysref_monitor : 1;
			unsigned int disable_sysref_realign : 1;
			unsigned int force_resync : 1;
			unsigned int hw_enable_framer_controller : 1;
			unsigned int shift_ping_pong : 1;
			unsigned int rd_ll2tl_fifo_threshold : 4;
		} bits;
		uint32_t rx_link_config;
	} rx_link_config_u;
} rx_link_config_t;
#endif /* __RX_LINK_CONFIG__ */

#ifndef __RX_LINK_ENABLE__
#define __RX_LINK_ENABLE__
#define RX_LINK_ENABLE(x) (x)->rx_link_enable_register.rx_link_enable_u.rx_link_enable
#define imola_rx_registers_LINK0_ENABLE(x) (x)->rx_link_enable_register.rx_link_enable_u.bits.link0_enable
#define imola_rx_registers_LINK1_ENABLE(x) (x)->rx_link_enable_register.rx_link_enable_u.bits.link1_enable
#define imola_rx_registers_RX_ENABLE(x) (x)->rx_link_enable_register.rx_link_enable_u.bits.rx_enable
#define imola_rx_registers_DUAL_LINK(x) (x)->rx_link_enable_register.rx_link_enable_u.bits.dual_link
typedef volatile struct rx_link_enable_s {
	union {
		struct {
			unsigned int link0_enable : 1;
			unsigned int link1_enable : 1;
			unsigned int rx_enable : 1;
			unsigned int dual_link : 1;
		} bits;
		uint32_t rx_link_enable;
	} rx_link_enable_u;
} rx_link_enable_t;
#endif /* __RX_LINK_ENABLE__ */

#ifndef __RX_COMMA_CONFIG__
#define __RX_COMMA_CONFIG__
#define RX_COMMA_CONFIG(x) (x)->rx_comma_config_register.rx_comma_config_u.rx_comma_config
#define imola_rx_registers_LOCK_THRESHOLD(x) (x)->rx_comma_config_register.rx_comma_config_u.bits.lock_threshold
#define imola_rx_registers_RESYNC_THRESHOLD(x) (x)->rx_comma_config_register.rx_comma_config_u.bits.resync_threshold
typedef volatile struct rx_comma_config_s {
	union {
		struct {
			unsigned int lock_threshold : 8;
			unsigned int resync_threshold : 8;
		} bits;
		uint32_t rx_comma_config;
	} rx_comma_config_u;
} rx_comma_config_t;
#endif /* __RX_COMMA_CONFIG__ */

#ifndef __RX_ALIGN_CONFIG__
#define __RX_ALIGN_CONFIG__
#define RX_ALIGN_CONFIG(x) (x)->rx_align_config_register.rx_align_config_u.rx_align_config
#define imola_rx_registers_SYSREF_ALIGN_DELAY(x) (x)->rx_align_config_register.rx_align_config_u.bits.sysref_align_delay
typedef volatile struct rx_align_config_s {
	union {
		struct {
			unsigned int sysref_align_delay : 8;
		} bits;
		uint32_t rx_align_config;
	} rx_align_config_u;
} rx_align_config_t;
#endif /* __RX_ALIGN_CONFIG__ */

#ifndef __RX_CGS_CONFIG__
#define __RX_CGS_CONFIG__
#define RX_CGS_CONFIG(x) (x)->rx_cgs_config_register.rx_cgs_config_u.rx_cgs_config
#define imola_rx_registers_RX_CGS_CHECK_CLR_COUNT(x) (x)->rx_cgs_config_register.rx_cgs_config_u.bits.rx_cgs_check_clr_count
#define imola_rx_registers_RX_CGS_FSM_DISABLE(x) (x)->rx_cgs_config_register.rx_cgs_config_u.bits.rx_cgs_fsm_disable
#define imola_rx_registers_RX_RESYNC_DELAY(x) (x)->rx_cgs_config_register.rx_cgs_config_u.bits.rx_resync_delay
typedef volatile struct rx_cgs_config_s {
	union {
		struct {
			unsigned int rx_cgs_check_clr_count : 8;
			unsigned int rx_cgs_fsm_disable : 1;
			unsigned int rx_resync_delay : 7;
		} bits;
		uint32_t rx_cgs_config;
	} rx_cgs_config_u;
} rx_cgs_config_t;
#endif /* __RX_CGS_CONFIG__ */

#ifndef __RX_SYSREF_MISALIGN_COUNT__
#define __RX_SYSREF_MISALIGN_COUNT__
#define RX_SYSREF_MISALIGN_COUNT(x) (x)->rx_sysref_misalign_count_register.rx_sysref_misalign_count_u.rx_sysref_misalign_count
#define imola_rx_registers_SYSREF_MISALIGN_CNT(x) (x)->rx_sysref_misalign_count_register.rx_sysref_misalign_count_u.bits.sysref_misalign_cnt
typedef volatile struct rx_sysref_misalign_count_s {
	union {
		struct {
			unsigned int sysref_misalign_cnt : 16;
		} bits;
		uint32_t rx_sysref_misalign_count;
	} rx_sysref_misalign_count_u;
} rx_sysref_misalign_count_t;
#endif /* __RX_SYSREF_MISALIGN_COUNT__ */

#ifndef __RX_LANE_ENABLE__
#define __RX_LANE_ENABLE__
#define RX_LANE_ENABLE(x) (x)->rx_lane_enable_register.rx_lane_enable_u.rx_lane_enable
#define imola_rx_registers_RX_LANE_ENABLE(x) (x)->rx_lane_enable_register.rx_lane_enable_u.bits.rx_lane_enable
typedef volatile struct rx_lane_enable_s {
	union {
		struct {
			unsigned int rx_lane_enable : 8;
		} bits;
		uint32_t rx_lane_enable;
	} rx_lane_enable_u;
} rx_lane_enable_t;
#endif /* __RX_LANE_ENABLE__ */

#ifndef __RX_ILAS_CONFIG__
#define __RX_ILAS_CONFIG__
#define RX_ILAS_CONFIG(x) (x)->rx_ilas_config_register.rx_ilas_config_u.rx_ilas_config
#define imola_rx_registers_RX_ILAS_MULTIFRAMES(x) (x)->rx_ilas_config_register.rx_ilas_config_u.bits.rx_ilas_multiframes
#define imola_rx_registers_RX_ILAS_DISABLE(x) (x)->rx_ilas_config_register.rx_ilas_config_u.bits.rx_ilas_disable
#define imola_rx_registers_RX_ILAS_DISABLE_ALIGN_ERROR(x) (x)->rx_ilas_config_register.rx_ilas_config_u.bits.rx_ilas_disable_align_error
#define imola_rx_registers_DISABLE_ALIGN_MON(x) (x)->rx_ilas_config_register.rx_ilas_config_u.bits.disable_align_mon
#define imola_rx_registers_DISABLE_AUTOREALIGN(x) (x)->rx_ilas_config_register.rx_ilas_config_u.bits.disable_autorealign
#define imola_rx_registers_ENABLE_NMCDA_SL(x) (x)->rx_ilas_config_register.rx_ilas_config_u.bits.enable_nmcda_sl
#define imola_rx_registers_ILAS_CONFIG_LANE(x) (x)->rx_ilas_config_register.rx_ilas_config_u.bits.ilas_config_lane
typedef volatile struct rx_ilas_config_s {
	union {
		struct {
			unsigned int rx_ilas_multiframes : 8;
			unsigned int rx_ilas_disable : 1;
			unsigned int rx_ilas_disable_align_error : 1;
			unsigned int disable_align_mon : 1;
			unsigned int disable_autorealign : 1;
			unsigned int enable_nmcda_sl : 1;
			unsigned int ilas_config_lane : 3;
		} bits;
		uint32_t rx_ilas_config;
	} rx_ilas_config_u;
} rx_ilas_config_t;
#endif /* __RX_ILAS_CONFIG__ */

#ifndef __RX_SCRAMBLE_CONFIG__
#define __RX_SCRAMBLE_CONFIG__
#define RX_SCRAMBLE_CONFIG(x) (x)->rx_scramble_config_register.rx_scramble_config_u.rx_scramble_config
#define imola_rx_registers_RX_SCRAMBLE(x) (x)->rx_scramble_config_register.rx_scramble_config_u.bits.rx_scramble
#define imola_rx_registers_RX_EARLY_SYNC(x) (x)->rx_scramble_config_register.rx_scramble_config_u.bits.rx_early_sync
#define imola_rx_registers_RX_ALLOW_CFG_SCR(x) (x)->rx_scramble_config_register.rx_scramble_config_u.bits.rx_allow_cfg_scr
typedef volatile struct rx_scramble_config_s {
	union {
		struct {
			unsigned int rx_scramble : 1;
			unsigned int rx_early_sync : 1;
			unsigned int rx_allow_cfg_scr : 1;
		} bits;
		uint32_t rx_scramble_config;
	} rx_scramble_config_u;
} rx_scramble_config_t;
#endif /* __RX_SCRAMBLE_CONFIG__ */

#ifndef __RX_OUT_TIMING__
#define __RX_OUT_TIMING__
#define RX_OUT_TIMING(x) (x)->rx_out_timing_register.rx_out_timing_u.rx_out_timing
#define imola_rx_registers_OUT_FCLK_DELAY(x) (x)->rx_out_timing_register.rx_out_timing_u.bits.out_fclk_delay
#define imola_rx_registers_OUT_EARLY_COUNT(x) (x)->rx_out_timing_register.rx_out_timing_u.bits.out_early_count
#define imola_rx_registers_OUT_LMFC_COUNT(x) (x)->rx_out_timing_register.rx_out_timing_u.bits.out_lmfc_count
typedef volatile struct rx_out_timing_s {
	union {
		struct {
			unsigned int out_fclk_delay : 8;
			unsigned int out_early_count : 5;
			unsigned int out_lmfc_count : 3;
		} bits;
		uint32_t rx_out_timing;
	} rx_out_timing_u;
} rx_out_timing_t;
#endif /* __RX_OUT_TIMING__ */

#ifndef __RX_TRANSPORT_CONFIG__
#define __RX_TRANSPORT_CONFIG__
#define RX_TRANSPORT_CONFIG(x) (x)->rx_transport_config_register.rx_transport_config_u.rx_transport_config
#define imola_rx_registers_RX_CFG_M(x) (x)->rx_transport_config_register.rx_transport_config_u.bits.rx_cfg_m
#define imola_rx_registers_RX_CFG_N(x) (x)->rx_transport_config_register.rx_transport_config_u.bits.rx_cfg_n
#define imola_rx_registers_RX_CFG_NPRIME(x) (x)->rx_transport_config_register.rx_transport_config_u.bits.rx_cfg_nprime
#define imola_rx_registers_RX_CFG_S(x) (x)->rx_transport_config_register.rx_transport_config_u.bits.rx_cfg_s
typedef volatile struct rx_transport_config_s {
	union {
		struct {
			unsigned int rx_cfg_m : 5;
			unsigned int rx_cfg_n : 5;
			unsigned int rx_cfg_nprime : 5;
			unsigned int rx_cfg_s : 1;
		} bits;
		uint32_t rx_transport_config;
	} rx_transport_config_u;
} rx_transport_config_t;
#endif /* __RX_TRANSPORT_CONFIG__ */

#ifndef __RX_DEBUG__
#define __RX_DEBUG__
#define RX_DEBUG(x) (x)->rx_debug_register.rx_debug_u.rx_debug
#define imola_rx_registers_ALLOW_SIM_ERROR(x) (x)->rx_debug_register.rx_debug_u.bits.allow_sim_error
#define imola_rx_registers_SHORT_TEST_EN(x) (x)->rx_debug_register.rx_debug_u.bits.short_test_en
#define imola_rx_registers_SHORT_TEST_SEL(x) (x)->rx_debug_register.rx_debug_u.bits.short_test_sel
#define imola_rx_registers_SEL_LINKLAYER_OUT(x) (x)->rx_debug_register.rx_debug_u.bits.sel_linklayer_out
typedef volatile struct rx_debug_s {
	union {
		struct {
			unsigned int allow_sim_error : 1;
			unsigned int short_test_en : 1;
			unsigned int short_test_sel : 4;
			unsigned int sel_linklayer_out : 3;
		} bits;
		uint32_t rx_debug;
	} rx_debug_u;
} rx_debug_t;
#endif /* __RX_DEBUG__ */

#ifndef __RX_FCLK_AND_LINKLAYER_STATUS__
#define __RX_FCLK_AND_LINKLAYER_STATUS__
#define RX_FCLK_AND_LINKLAYER_STATUS(x) (x)->rx_fclk_and_linklayer_status_register.rx_fclk_and_linklayer_status_u.rx_fclk_and_linklayer_status
#define imola_rx_registers_FCLK_LMFC_ALIGNED(x) (x)->rx_fclk_and_linklayer_status_register.rx_fclk_and_linklayer_status_u.bits.fclk_lmfc_aligned
#define imola_rx_registers_FCLK_FSM_LOCK(x) (x)->rx_fclk_and_linklayer_status_register.rx_fclk_and_linklayer_status_u.bits.fclk_fsm_lock
#define imola_rx_registers_LINK0_READ_ENABLE(x) (x)->rx_fclk_and_linklayer_status_register.rx_fclk_and_linklayer_status_u.bits.link0_read_enable
#define imola_rx_registers_LINK1_READ_ENABLE(x) (x)->rx_fclk_and_linklayer_status_register.rx_fclk_and_linklayer_status_u.bits.link1_read_enable
#define imola_rx_registers_LINKLAYER_OUT_2_REG(x) (x)->rx_fclk_and_linklayer_status_register.rx_fclk_and_linklayer_status_u.bits.linklayer_out_2_reg
typedef volatile struct rx_fclk_and_linklayer_status_s {
	union {
		struct {
			unsigned int fclk_lmfc_aligned : 1;
			unsigned int fclk_fsm_lock : 1;
			unsigned int link0_read_enable : 1;
			unsigned int link1_read_enable : 1;
			unsigned int linklayer_out_2_reg : 9;
		} bits;
		uint32_t rx_fclk_and_linklayer_status;
	} rx_fclk_and_linklayer_status_u;
} rx_fclk_and_linklayer_status_t;
#endif /* __RX_FCLK_AND_LINKLAYER_STATUS__ */

#ifndef __RX_D21_5_THRESHOLD__
#define __RX_D21_5_THRESHOLD__
#define RX_D21_5_THRESHOLD(x) (x)->rx_d21_5_threshold_register.rx_d21_5_threshold_u.rx_d21_5_threshold
#define imola_rx_registers_D21_5_LOCK_THRESH(x) (x)->rx_d21_5_threshold_register.rx_d21_5_threshold_u.bits.d21_5_lock_thresh
typedef volatile struct rx_d21_5_threshold_s {
	union {
		struct {
			unsigned int d21_5_lock_thresh : 8;
		} bits;
		uint32_t rx_d21_5_threshold;
	} rx_d21_5_threshold_u;
} rx_d21_5_threshold_t;
#endif /* __RX_D21_5_THRESHOLD__ */

#ifndef __PHY_ATEST_CTRL__
#define __PHY_ATEST_CTRL__
#define PHY_ATEST_CTRL(x) (x)->phy_atest_ctrl_register.phy_atest_ctrl_u.phy_atest_ctrl
#define imola_rx_registers_PHY_ATEST_CTRL(x) (x)->phy_atest_ctrl_register.phy_atest_ctrl_u.bits.phy_atest_ctrl
typedef volatile struct phy_atest_ctrl_s {
	union {
		struct {
			unsigned int phy_atest_ctrl : 16;
		} bits;
		uint32_t phy_atest_ctrl;
	} phy_atest_ctrl_u;
} phy_atest_ctrl_t;
#endif /* __PHY_ATEST_CTRL__ */

#ifndef __RX_GP__
#define __RX_GP__
#define RX_GP(x) (x)->rx_gp_register.rx_gp_u.rx_gp
#define imola_rx_registers_RX_GP(x) (x)->rx_gp_register.rx_gp_u.bits.rx_gp
typedef volatile struct rx_gp_s {
	union {
		struct {
			unsigned int rx_gp : 16;
		} bits;
		uint32_t rx_gp;
	} rx_gp_u;
} rx_gp_t;
#endif /* __RX_GP__ */

#ifndef __DLL1_ATEST_CTRL__
#define __DLL1_ATEST_CTRL__
#define DLL1_ATEST_CTRL(x) (x)->dll1_atest_ctrl_register.dll1_atest_ctrl_u.dll1_atest_ctrl
#define imola_rx_registers_DLL_ATEST_CTRL(x) (x)->dll1_atest_ctrl_register.dll1_atest_ctrl_u.bits.dll_atest_ctrl
typedef volatile struct dll1_atest_ctrl_s {
	union {
		struct {
			unsigned int dll_atest_ctrl : 8;
		} bits;
		uint32_t dll1_atest_ctrl;
	} dll1_atest_ctrl_u;
} dll1_atest_ctrl_t;
#endif /* __DLL1_ATEST_CTRL__ */

#ifndef __DLL_CTRL_REGS__
#define __DLL_CTRL_REGS__
#define DLL_CTRL_REGS(x) (x)->dll_ctrl_regs_register.dll_ctrl_regs_u.dll_ctrl_regs
#define imola_rx_registers_DLL_CTRL(x) (x)->dll_ctrl_regs_register.dll_ctrl_regs_u.bits.dll_ctrl
#define imola_rx_registers_DLL_STRT_DEL(x) (x)->dll_ctrl_regs_register.dll_ctrl_regs_u.bits.dll_strt_del
#define imola_rx_registers_DLL_CP_OPAMP_BIAS_CTRL(x) (x)->dll_ctrl_regs_register.dll_ctrl_regs_u.bits.dll_cp_opamp_bias_ctrl
#define imola_rx_registers_DLL_CML_BIAS_CTRL(x) (x)->dll_ctrl_regs_register.dll_ctrl_regs_u.bits.dll_cml_bias_ctrl
#define imola_rx_registers_DLL_CP_S2D_BIAS_CTRL(x) (x)->dll_ctrl_regs_register.dll_ctrl_regs_u.bits.dll_cp_s2d_bias_ctrl
typedef volatile struct dll_ctrl_regs_s {
	union {
		struct {
			unsigned int dll_ctrl : 4;
			unsigned int dll_strt_del : 2;
			unsigned int dll_cp_opamp_bias_ctrl : 2;
			unsigned int dll_cml_bias_ctrl : 2;
			unsigned int dll_cp_s2d_bias_ctrl : 2;
		} bits;
		uint32_t dll_ctrl_regs;
	} dll_ctrl_regs_u;
} dll_ctrl_regs_t;
#endif /* __DLL_CTRL_REGS__ */

#ifndef __DLL_CPPFD_CTRL_REGS__
#define __DLL_CPPFD_CTRL_REGS__
#define DLL_CPPFD_CTRL_REGS(x) (x)->dll_cppfd_ctrl_regs_register.dll_cppfd_ctrl_regs_u.dll_cppfd_ctrl_regs
#define imola_rx_registers_DLL_PFD_DLY(x) (x)->dll_cppfd_ctrl_regs_register.dll_cppfd_ctrl_regs_u.bits.dll_pfd_dly
#define imola_rx_registers_DLL_CP_CURR_CTRL(x) (x)->dll_cppfd_ctrl_regs_register.dll_cppfd_ctrl_regs_u.bits.dll_cp_curr_ctrl
#define imola_rx_registers_DLL_CP_EN(x) (x)->dll_cppfd_ctrl_regs_register.dll_cppfd_ctrl_regs_u.bits.dll_cp_en
#define imola_rx_registers_DLL_CAP_CTRL_B(x) (x)->dll_cppfd_ctrl_regs_register.dll_cppfd_ctrl_regs_u.bits.dll_cap_ctrl_b
typedef volatile struct dll_cppfd_ctrl_regs_s {
	union {
		struct {
			unsigned int dll_pfd_dly : 1;
			unsigned int dll_cp_curr_ctrl : 3;
			unsigned int dll_cp_en : 1;
			unsigned int dll_cap_ctrl_b : 3;
		} bits;
		uint32_t dll_cppfd_ctrl_regs;
	} dll_cppfd_ctrl_regs_u;
} dll_cppfd_ctrl_regs_t;
#endif /* __DLL_CPPFD_CTRL_REGS__ */

#ifndef __DLL_VCDL_DLY_REGS__
#define __DLL_VCDL_DLY_REGS__
#define DLL_VCDL_DLY_REGS(x) (x)->dll_vcdl_dly_regs_register.dll_vcdl_dly_regs_u.dll_vcdl_dly_regs
#define imola_rx_registers_DLL_VCDL_DEL1(x) (x)->dll_vcdl_dly_regs_register.dll_vcdl_dly_regs_u.bits.dll_vcdl_del1
#define imola_rx_registers_DLL_VCDL_DEL2(x) (x)->dll_vcdl_dly_regs_register.dll_vcdl_dly_regs_u.bits.dll_vcdl_del2
#define imola_rx_registers_DLL_VCDL_DEL3(x) (x)->dll_vcdl_dly_regs_register.dll_vcdl_dly_regs_u.bits.dll_vcdl_del3
typedef volatile struct dll_vcdl_dly_regs_s {
	union {
		struct {
			unsigned int dll_vcdl_del1 : 4;
			unsigned int dll_vcdl_del2 : 4;
			unsigned int dll_vcdl_del3 : 4;
		} bits;
		uint32_t dll_vcdl_dly_regs;
	} dll_vcdl_dly_regs_u;
} dll_vcdl_dly_regs_t;
#endif /* __DLL_VCDL_DLY_REGS__ */

#ifndef __DLL_DUTY_CYL_REGS__
#define __DLL_DUTY_CYL_REGS__
#define DLL_DUTY_CYL_REGS(x) (x)->dll_duty_cyl_regs_register.dll_duty_cyl_regs_u.dll_duty_cyl_regs
#define imola_rx_registers_DLL_DUTY_CYCLE(x) (x)->dll_duty_cyl_regs_register.dll_duty_cyl_regs_u.bits.dll_duty_cycle
typedef volatile struct dll_duty_cyl_regs_s {
	union {
		struct {
			unsigned int dll_duty_cycle : 2;
		} bits;
		uint32_t dll_duty_cyl_regs;
	} dll_duty_cyl_regs_u;
} dll_duty_cyl_regs_t;
#endif /* __DLL_DUTY_CYL_REGS__ */

#ifndef __DLL_RSTN_REGS__
#define __DLL_RSTN_REGS__
#define DLL_RSTN_REGS(x) (x)->dll_rstn_regs_register.dll_rstn_regs_u.dll_rstn_regs
#define imola_rx_registers_DLL_RST_N(x) (x)->dll_rstn_regs_register.dll_rstn_regs_u.bits.dll_rst_n
typedef volatile struct dll_rstn_regs_s {
	union {
		struct {
			unsigned int dll_rst_n : 1;
		} bits;
		uint32_t dll_rstn_regs;
	} dll_rstn_regs_u;
} dll_rstn_regs_t;
#endif /* __DLL_RSTN_REGS__ */

#ifndef __DLL_GP__
#define __DLL_GP__
#define DLL_GP(x) (x)->dll_gp_register.dll_gp_u.dll_gp
#define imola_rx_registers_DLL_GP(x) (x)->dll_gp_register.dll_gp_u.bits.dll_gp
typedef volatile struct dll_gp_s {
	union {
		struct {
			unsigned int dll_gp : 8;
		} bits;
		uint32_t dll_gp;
	} dll_gp_u;
} dll_gp_t;
#endif /* __DLL_GP__ */

#ifndef __DLL_LOCK_DETECT__
#define __DLL_LOCK_DETECT__
#define DLL_LOCK_DETECT(x) (x)->dll_lock_detect_register.dll_lock_detect_u.dll_lock_detect
#define imola_rx_registers_DLL_LOCK_DETECT(x) (x)->dll_lock_detect_register.dll_lock_detect_u.bits.dll_lock_detect
typedef volatile struct dll_lock_detect_s {
	union {
		struct {
			unsigned int dll_lock_detect : 4;
		} bits;
		uint32_t dll_lock_detect;
	} dll_lock_detect_u;
} dll_lock_detect_t;
#endif /* __DLL_LOCK_DETECT__ */

typedef struct imola_rx_registers_s
{
	rx_link_config_t rx_link_config_register;	// Address: 0x0
	rx_link_enable_t rx_link_enable_register;	// Address: 0x1
	rx_comma_config_t rx_comma_config_register;	// Address: 0x2
	rx_align_config_t rx_align_config_register;	// Address: 0x3
	rx_cgs_config_t rx_cgs_config_register;	// Address: 0x4
	rx_sysref_misalign_count_t rx_sysref_misalign_count_register;	// Address: 0x5
	rx_lane_enable_t rx_lane_enable_register;	// Address: 0x6
	rx_ilas_config_t rx_ilas_config_register;	// Address: 0x7
	rx_scramble_config_t rx_scramble_config_register;	// Address: 0x8
	rx_out_timing_t rx_out_timing_register;	// Address: 0x9
	rx_transport_config_t rx_transport_config_register;	// Address: 0xa
	rx_debug_t rx_debug_register;	// Address: 0xb
	rx_fclk_and_linklayer_status_t rx_fclk_and_linklayer_status_register;	// Address: 0xc
	rx_d21_5_threshold_t rx_d21_5_threshold_register;	// Address: 0xd
	phy_atest_ctrl_t phy_atest_ctrl_register;	// Address: 0xe
	rx_gp_t rx_gp_register;	// Address: 0xf
	dll1_atest_ctrl_t dll1_atest_ctrl_register;	// Address: 0x10
	dll_ctrl_regs_t dll_ctrl_regs_register;	// Address: 0x11
	dll_cppfd_ctrl_regs_t dll_cppfd_ctrl_regs_register;	// Address: 0x12
	dll_vcdl_dly_regs_t dll_vcdl_dly_regs_register;	// Address: 0x13
	dll_duty_cyl_regs_t dll_duty_cyl_regs_register;	// Address: 0x14
	dll_rstn_regs_t dll_rstn_regs_register;	// Address: 0x15
	dll_gp_t dll_gp_register;	// Address: 0x16
	dll_lock_detect_t dll_lock_detect_register;	// Address: 0x17
} imola_rx_registers_t;

#endif /* __IMOLA_RX_REGISTERS__ */
