//*******************************************************************************
//      __  __                                                                  *
//     /  \/  \                                                                 *
//         \   \                                                                *
//    I Q - A N A L O G                                                         *
//           \   \            IQ-Analog Corp                                    *
//            \__/\__/       www.iqanalog.com                                   *
//                                                                              *
//------------------------------------------------------------------------------*
//                                                                              *
// Copyright (C) 2018-2019 IQ-Analog Corp. All rights reserved.                 *
//                                                                              *
//------------------------------------------------------------------------------*
// IQ-Analog CONFIDENTIAL                                                       *
//------------------------------------------------------------------------------*
//                                                                              *
// This file is released with "Government Purpose Rights" as defined            *
// in DFARS SUBPART 227.71, clause 252.227-7013.                                *
//                                                                              *
//*******************************************************************************

// Generated by RMM 3.3
// IQ-Analog Corp. 2013-2018.

#ifndef __GP_REGS_REGISTERS__
#define __GP_REGS_REGISTERS__

#ifndef __EXT_ADC_CAL_CTRL__
#define __EXT_ADC_CAL_CTRL__
#define EXT_ADC_CAL_CTRL(x) (x)->ext_adc_cal_ctrl_register.ext_adc_cal_ctrl_u.ext_adc_cal_ctrl
#define gp_regs_CAL_SEL(x) (x)->ext_adc_cal_ctrl_register.ext_adc_cal_ctrl_u.bits.cal_sel
#define gp_regs_INIT_EN(x) (x)->ext_adc_cal_ctrl_register.ext_adc_cal_ctrl_u.bits.init_en
#define gp_regs_TDC_CAL_EN(x) (x)->ext_adc_cal_ctrl_register.ext_adc_cal_ctrl_u.bits.tdc_cal_en
#define gp_regs_VTC_LUT_CAL_EN(x) (x)->ext_adc_cal_ctrl_register.ext_adc_cal_ctrl_u.bits.vtc_lut_cal_en
#define gp_regs_BGR_CAL_EN(x) (x)->ext_adc_cal_ctrl_register.ext_adc_cal_ctrl_u.bits.bgr_cal_en
#define gp_regs_TI_CAL_EN(x) (x)->ext_adc_cal_ctrl_register.ext_adc_cal_ctrl_u.bits.ti_cal_en
#define gp_regs_TIMING_CAL_EN(x) (x)->ext_adc_cal_ctrl_register.ext_adc_cal_ctrl_u.bits.timing_cal_en
#define gp_regs_DUAL_ADC_SHARE_MODE(x) (x)->ext_adc_cal_ctrl_register.ext_adc_cal_ctrl_u.bits.dual_adc_share_mode
#define gp_regs_PAUSE_ON_CAL_ERROR(x) (x)->ext_adc_cal_ctrl_register.ext_adc_cal_ctrl_u.bits.pause_on_cal_error
#define gp_regs_ILV_MODE(x) (x)->ext_adc_cal_ctrl_register.ext_adc_cal_ctrl_u.bits.ilv_mode
#define gp_regs_STEP_BY_STEP(x) (x)->ext_adc_cal_ctrl_register.ext_adc_cal_ctrl_u.bits.step_by_step
#define gp_regs_CTRL_SPARE(x) (x)->ext_adc_cal_ctrl_register.ext_adc_cal_ctrl_u.bits.ctrl_spare
#define gp_regs_CAL_PAUSED(x) (x)->ext_adc_cal_ctrl_register.ext_adc_cal_ctrl_u.bits.cal_paused
#define gp_regs_CAL_ERROR(x) (x)->ext_adc_cal_ctrl_register.ext_adc_cal_ctrl_u.bits.cal_error
#define gp_regs_CAL_ERROR_BLK(x) (x)->ext_adc_cal_ctrl_register.ext_adc_cal_ctrl_u.bits.cal_error_blk
#define gp_regs_CAL_ERROR_CODE(x) (x)->ext_adc_cal_ctrl_register.ext_adc_cal_ctrl_u.bits.cal_error_code
#define gp_regs_CAL_ERROR_VAL(x) (x)->ext_adc_cal_ctrl_register.ext_adc_cal_ctrl_u.bits.cal_error_val
typedef volatile struct ext_adc_cal_ctrl_s {
	union {
		struct {
			unsigned int cal_sel : 2;
			unsigned int init_en : 1;
			unsigned int tdc_cal_en : 1;
			unsigned int vtc_lut_cal_en : 1;
			unsigned int bgr_cal_en : 1;
			unsigned int ti_cal_en : 1;
			unsigned int timing_cal_en : 1;
			unsigned int dual_adc_share_mode : 1;
			unsigned int pause_on_cal_error : 1;
			unsigned int ilv_mode : 2;
			unsigned int step_by_step : 1;
			unsigned int ctrl_spare : 3;
			unsigned int cal_paused : 1;
			unsigned int cal_error : 1;
			unsigned int cal_error_blk : 2;
			unsigned int cal_error_code : 4;
			unsigned int cal_error_val : 8;
		} bits;
		uint32_t ext_adc_cal_ctrl;
	} ext_adc_cal_ctrl_u;
} ext_adc_cal_ctrl_t;
#endif /* __EXT_ADC_CAL_CTRL__ */

#ifndef __EXT_ADC_RUN_CTRL__
#define __EXT_ADC_RUN_CTRL__
#define EXT_ADC_RUN_CTRL(x) (x)->ext_adc_run_ctrl_register.ext_adc_run_ctrl_u.ext_adc_run_ctrl
#define gp_regs_EXT_CTRL_REQ(x) (x)->ext_adc_run_ctrl_register.ext_adc_run_ctrl_u.bits.ext_ctrl_req
#define gp_regs_EXT_STATUS_REQ(x) (x)->ext_adc_run_ctrl_register.ext_adc_run_ctrl_u.bits.ext_status_req
#define gp_regs_EXT_ACCESS_ACK(x) (x)->ext_adc_run_ctrl_register.ext_adc_run_ctrl_u.bits.ext_access_ack
#define gp_regs_CAL_PAUSE(x) (x)->ext_adc_run_ctrl_register.ext_adc_run_ctrl_u.bits.cal_pause
#define gp_regs_CAL_CONT(x) (x)->ext_adc_run_ctrl_register.ext_adc_run_ctrl_u.bits.cal_cont
#define gp_regs_CAL_RESET(x) (x)->ext_adc_run_ctrl_register.ext_adc_run_ctrl_u.bits.cal_reset
#define gp_regs_CAL_RESTART(x) (x)->ext_adc_run_ctrl_register.ext_adc_run_ctrl_u.bits.cal_restart
#define gp_regs_RUN_CTRL_SPARE(x) (x)->ext_adc_run_ctrl_register.ext_adc_run_ctrl_u.bits.run_ctrl_spare
#define gp_regs_ADC_BUS_READ_REQ(x) (x)->ext_adc_run_ctrl_register.ext_adc_run_ctrl_u.bits.adc_bus_read_req
#define gp_regs_ADC_BUS_WRITE_REQ(x) (x)->ext_adc_run_ctrl_register.ext_adc_run_ctrl_u.bits.adc_bus_write_req
#define gp_regs_ADC_BUS_BLK(x) (x)->ext_adc_run_ctrl_register.ext_adc_run_ctrl_u.bits.adc_bus_blk
#define gp_regs_DELRANGE(x) (x)->ext_adc_run_ctrl_register.ext_adc_run_ctrl_u.bits.delrange
#define gp_regs_TDC_CLK_PW(x) (x)->ext_adc_run_ctrl_register.ext_adc_run_ctrl_u.bits.tdc_clk_pw
#define gp_regs_VTC_SLOPE(x) (x)->ext_adc_run_ctrl_register.ext_adc_run_ctrl_u.bits.vtc_slope
#define gp_regs_VTC_SLOPE_DSM_EN(x) (x)->ext_adc_run_ctrl_register.ext_adc_run_ctrl_u.bits.vtc_slope_dsm_en
#define gp_regs_VTC_COMP_TH(x) (x)->ext_adc_run_ctrl_register.ext_adc_run_ctrl_u.bits.vtc_comp_th
#define gp_regs_VTC_PULSE_WDTH(x) (x)->ext_adc_run_ctrl_register.ext_adc_run_ctrl_u.bits.vtc_pulse_wdth
#define gp_regs_TDC_CLK_DEL(x) (x)->ext_adc_run_ctrl_register.ext_adc_run_ctrl_u.bits.tdc_clk_del
typedef volatile struct ext_adc_run_ctrl_s {
	union {
		struct {
			unsigned int ext_ctrl_req : 1;
			unsigned int ext_status_req : 1;
			unsigned int ext_access_ack : 1;
			unsigned int cal_pause : 1;
			unsigned int cal_cont : 1;
			unsigned int cal_reset : 1;
			unsigned int cal_restart : 1;
			unsigned int run_ctrl_spare : 1;
			unsigned int adc_bus_read_req : 1;
			unsigned int adc_bus_write_req : 1;
			unsigned int adc_bus_blk : 2;
			unsigned int delrange : 2;
			unsigned int tdc_clk_pw : 2;
			unsigned int vtc_slope : 6;
			unsigned int vtc_slope_dsm_en : 1;
			unsigned int vtc_comp_th : 5;
			unsigned int vtc_pulse_wdth : 2;
			unsigned int tdc_clk_del : 2;
		} bits;
		uint32_t ext_adc_run_ctrl;
	} ext_adc_run_ctrl_u;
} ext_adc_run_ctrl_t;
#endif /* __EXT_ADC_RUN_CTRL__ */

#ifndef __OOPS3__
#define __OOPS3__
#define OOPS3(x) (x)->oops3_register.oops3_u.oops3
#define gp_regs_OOPS3(x) (x)->oops3_register.oops3_u.bits.oops3
typedef volatile struct oops3_s {
	union {
		struct {
			unsigned int oops3 : 32;
		} bits;
		uint32_t oops3;
	} oops3_u;
} oops3_t;
#endif /* __OOPS3__ */

#ifndef __OOPS4__
#define __OOPS4__
#define OOPS4(x) (x)->oops4_register.oops4_u.oops4
#define gp_regs_OOPS4(x) (x)->oops4_register.oops4_u.bits.oops4
typedef volatile struct oops4_s {
	union {
		struct {
			unsigned int oops4 : 32;
		} bits;
		uint32_t oops4;
	} oops4_u;
} oops4_t;
#endif /* __OOPS4__ */

#ifndef __OOPS5__
#define __OOPS5__
#define OOPS5(x) (x)->oops5_register.oops5_u.oops5
#define gp_regs_OOPS5(x) (x)->oops5_register.oops5_u.bits.oops5
typedef volatile struct oops5_s {
	union {
		struct {
			unsigned int oops5 : 32;
		} bits;
		uint32_t oops5;
	} oops5_u;
} oops5_t;
#endif /* __OOPS5__ */

#ifndef __TIMER_CONTROL_ATTEN__
#define __TIMER_CONTROL_ATTEN__
#define TIMER_CONTROL_ATTEN(x) (x)->timer_control_atten_register.timer_control_atten_u.timer_control_atten
#define gp_regs_TIMER_ATTEN(x) (x)->timer_control_atten_register.timer_control_atten_u.bits.timer_atten
typedef volatile struct timer_control_atten_s {
	union {
		struct {
			unsigned int timer_atten : 16;
		} bits;
		uint32_t timer_control_atten;
	} timer_control_atten_u;
} timer_control_atten_t;
#endif /* __TIMER_CONTROL_ATTEN__ */

#ifndef __ATTEN__
#define __ATTEN__
#define ATTEN(x) (x)->atten_register.atten_u.atten
#define gp_regs_ATTEN_CTRL(x) (x)->atten_register.atten_u.bits.atten_ctrl
typedef volatile struct atten_s {
	union {
		struct {
			unsigned int atten_ctrl : 1;
		} bits;
		uint32_t atten;
	} atten_u;
} atten_t;
#endif /* __ATTEN__ */

#ifndef __RX_TX_GP__
#define __RX_TX_GP__
#define RX_TX_GP(x) (x)->rx_tx_gp_register.rx_tx_gp_u.rx_tx_gp
#define gp_regs_TX_RX_LOOPBACK(x) (x)->rx_tx_gp_register.rx_tx_gp_u.bits.tx_rx_loopback
#define gp_regs_RX_POLAR(x) (x)->rx_tx_gp_register.rx_tx_gp_u.bits.rx_polar
#define gp_regs_TX_POLAR(x) (x)->rx_tx_gp_register.rx_tx_gp_u.bits.tx_polar
#define gp_regs_FRAME_FORMAT(x) (x)->rx_tx_gp_register.rx_tx_gp_u.bits.frame_format
typedef volatile struct rx_tx_gp_s {
	union {
		struct {
			unsigned int tx_rx_loopback : 1;
			unsigned int rx_polar : 1;
			unsigned int tx_polar : 1;
			unsigned int frame_format : 3;
		} bits;
		uint32_t rx_tx_gp;
	} rx_tx_gp_u;
} rx_tx_gp_t;
#endif /* __RX_TX_GP__ */

#ifndef __FORCE_FRAME_SYNC__
#define __FORCE_FRAME_SYNC__
#define FORCE_FRAME_SYNC(x) (x)->force_frame_sync_register.force_frame_sync_u.force_frame_sync
#define gp_regs_FORCE_FRAME_SYNC_DUMMY(x) (x)->force_frame_sync_register.force_frame_sync_u.bits.force_frame_sync_dummy
#define gp_regs_FORCE_FRAME_SYNC(x) (x)->force_frame_sync_register.force_frame_sync_u.bits.force_frame_sync
typedef volatile struct force_frame_sync_s {
	union {
		struct {
			unsigned int force_frame_sync_dummy : 3;
			unsigned int force_frame_sync : 1;
		} bits;
		uint32_t force_frame_sync;
	} force_frame_sync_u;
} force_frame_sync_t;
#endif /* __FORCE_FRAME_SYNC__ */

#ifndef __ADC_DAC_LOOPBACK_EN__
#define __ADC_DAC_LOOPBACK_EN__
#define ADC_DAC_LOOPBACK_EN(x) (x)->adc_dac_loopback_en_register.adc_dac_loopback_en_u.adc_dac_loopback_en
#define gp_regs_ADC_DAC_LOOPBACK(x) (x)->adc_dac_loopback_en_register.adc_dac_loopback_en_u.bits.adc_dac_loopback
#define gp_regs_DAC_ADC_LOOPBACK(x) (x)->adc_dac_loopback_en_register.adc_dac_loopback_en_u.bits.dac_adc_loopback
typedef volatile struct adc_dac_loopback_en_s {
	union {
		struct {
			unsigned int adc_dac_loopback : 1;
			unsigned int dac_adc_loopback : 1;
		} bits;
		uint32_t adc_dac_loopback_en;
	} adc_dac_loopback_en_u;
} adc_dac_loopback_en_t;
#endif /* __ADC_DAC_LOOPBACK_EN__ */

#ifndef __ATTEN_DRIVER_CTRL__
#define __ATTEN_DRIVER_CTRL__
#define ATTEN_DRIVER_CTRL(x) (x)->atten_driver_ctrl_register.atten_driver_ctrl_u.atten_driver_ctrl
#define gp_regs_LANE_ERR_BITS_EN(x) (x)->atten_driver_ctrl_register.atten_driver_ctrl_u.bits.lane_err_bits_en
#define gp_regs_SYNC_LOSS_EN(x) (x)->atten_driver_ctrl_register.atten_driver_ctrl_u.bits.sync_loss_en
typedef volatile struct atten_driver_ctrl_s {
	union {
		struct {
			unsigned int lane_err_bits_en : 1;
			unsigned int sync_loss_en : 1;
		} bits;
		uint32_t atten_driver_ctrl;
	} atten_driver_ctrl_u;
} atten_driver_ctrl_t;
#endif /* __ATTEN_DRIVER_CTRL__ */

#ifndef __MEM_CAP_TRIGGER1__
#define __MEM_CAP_TRIGGER1__
#define MEM_CAP_TRIGGER1(x) (x)->mem_cap_trigger1_register.mem_cap_trigger1_u.mem_cap_trigger1
#define gp_regs_ADC1_TRIGGER(x) (x)->mem_cap_trigger1_register.mem_cap_trigger1_u.bits.adc1_trigger
typedef volatile struct mem_cap_trigger1_s {
	union {
		struct {
			unsigned int adc1_trigger : 1;
		} bits;
		uint32_t mem_cap_trigger1;
	} mem_cap_trigger1_u;
} mem_cap_trigger1_t;
#endif /* __MEM_CAP_TRIGGER1__ */

#ifndef __MEM_CAP_TRIGGER2__
#define __MEM_CAP_TRIGGER2__
#define MEM_CAP_TRIGGER2(x) (x)->mem_cap_trigger2_register.mem_cap_trigger2_u.mem_cap_trigger2
#define gp_regs_ADC2_TRIGGER(x) (x)->mem_cap_trigger2_register.mem_cap_trigger2_u.bits.adc2_trigger
typedef volatile struct mem_cap_trigger2_s {
	union {
		struct {
			unsigned int adc2_trigger : 1;
		} bits;
		uint32_t mem_cap_trigger2;
	} mem_cap_trigger2_u;
} mem_cap_trigger2_t;
#endif /* __MEM_CAP_TRIGGER2__ */

#ifndef __TEST_MEM_CAP_TRIGGER1__
#define __TEST_MEM_CAP_TRIGGER1__
#define TEST_MEM_CAP_TRIGGER1(x) (x)->test_mem_cap_trigger1_register.test_mem_cap_trigger1_u.test_mem_cap_trigger1
#define gp_regs_TEST_ADC1_TRIGGER(x) (x)->test_mem_cap_trigger1_register.test_mem_cap_trigger1_u.bits.test_adc1_trigger
typedef volatile struct test_mem_cap_trigger1_s {
	union {
		struct {
			unsigned int test_adc1_trigger : 1;
		} bits;
		uint32_t test_mem_cap_trigger1;
	} test_mem_cap_trigger1_u;
} test_mem_cap_trigger1_t;
#endif /* __TEST_MEM_CAP_TRIGGER1__ */

#ifndef __TEST_MEM_CAP_TRIGGER2__
#define __TEST_MEM_CAP_TRIGGER2__
#define TEST_MEM_CAP_TRIGGER2(x) (x)->test_mem_cap_trigger2_register.test_mem_cap_trigger2_u.test_mem_cap_trigger2
#define gp_regs_TEST_ADC2_TRIGGER(x) (x)->test_mem_cap_trigger2_register.test_mem_cap_trigger2_u.bits.test_adc2_trigger
typedef volatile struct test_mem_cap_trigger2_s {
	union {
		struct {
			unsigned int test_adc2_trigger : 1;
		} bits;
		uint32_t test_mem_cap_trigger2;
	} test_mem_cap_trigger2_u;
} test_mem_cap_trigger2_t;
#endif /* __TEST_MEM_CAP_TRIGGER2__ */

#ifndef __DAC_COMP_MULT_DUMMY__
#define __DAC_COMP_MULT_DUMMY__
#define DAC_COMP_MULT_DUMMY(x) (x)->dac_comp_mult_dummy_register.dac_comp_mult_dummy_u.dac_comp_mult_dummy
#define gp_regs_DAC_COMP_MULT_DUMMY(x) (x)->dac_comp_mult_dummy_register.dac_comp_mult_dummy_u.bits.dac_comp_mult_dummy
typedef volatile struct dac_comp_mult_dummy_s {
	union {
		struct {
			unsigned int dac_comp_mult_dummy : 32;
		} bits;
		uint32_t dac_comp_mult_dummy;
	} dac_comp_mult_dummy_u;
} dac_comp_mult_dummy_t;
#endif /* __DAC_COMP_MULT_DUMMY__ */

#ifndef __OUT_DATA_DUMMY5__
#define __OUT_DATA_DUMMY5__
#define OUT_DATA_DUMMY5(x) (x)->out_data_dummy5_register.out_data_dummy5_u.out_data_dummy5
#define gp_regs_DUMMY5(x) (x)->out_data_dummy5_register.out_data_dummy5_u.bits.dummy5
typedef volatile struct out_data_dummy5_s {
	union {
		struct {
			unsigned int dummy5 : 32;
		} bits;
		uint32_t out_data_dummy5;
	} out_data_dummy5_u;
} out_data_dummy5_t;
#endif /* __OUT_DATA_DUMMY5__ */

#ifndef __OUT_DATA_DUMMY6__
#define __OUT_DATA_DUMMY6__
#define OUT_DATA_DUMMY6(x) (x)->out_data_dummy6_register.out_data_dummy6_u.out_data_dummy6
#define gp_regs_DUMMY6(x) (x)->out_data_dummy6_register.out_data_dummy6_u.bits.dummy6
typedef volatile struct out_data_dummy6_s {
	union {
		struct {
			unsigned int dummy6 : 32;
		} bits;
		uint32_t out_data_dummy6;
	} out_data_dummy6_u;
} out_data_dummy6_t;
#endif /* __OUT_DATA_DUMMY6__ */

#ifndef __OUT_DATA_DUMMY7__
#define __OUT_DATA_DUMMY7__
#define OUT_DATA_DUMMY7(x) (x)->out_data_dummy7_register.out_data_dummy7_u.out_data_dummy7
#define gp_regs_DUMMY7(x) (x)->out_data_dummy7_register.out_data_dummy7_u.bits.dummy7
typedef volatile struct out_data_dummy7_s {
	union {
		struct {
			unsigned int dummy7 : 32;
		} bits;
		uint32_t out_data_dummy7;
	} out_data_dummy7_u;
} out_data_dummy7_t;
#endif /* __OUT_DATA_DUMMY7__ */

#ifndef __OUT_DATA_DUMMY8__
#define __OUT_DATA_DUMMY8__
#define OUT_DATA_DUMMY8(x) (x)->out_data_dummy8_register.out_data_dummy8_u.out_data_dummy8
#define gp_regs_DUMMY8(x) (x)->out_data_dummy8_register.out_data_dummy8_u.bits.dummy8
typedef volatile struct out_data_dummy8_s {
	union {
		struct {
			unsigned int dummy8 : 32;
		} bits;
		uint32_t out_data_dummy8;
	} out_data_dummy8_u;
} out_data_dummy8_t;
#endif /* __OUT_DATA_DUMMY8__ */

#ifndef __OUT_DATA_DUMMY9__
#define __OUT_DATA_DUMMY9__
#define OUT_DATA_DUMMY9(x) (x)->out_data_dummy9_register.out_data_dummy9_u.out_data_dummy9
#define gp_regs_DUMMY9(x) (x)->out_data_dummy9_register.out_data_dummy9_u.bits.dummy9
typedef volatile struct out_data_dummy9_s {
	union {
		struct {
			unsigned int dummy9 : 32;
		} bits;
		uint32_t out_data_dummy9;
	} out_data_dummy9_u;
} out_data_dummy9_t;
#endif /* __OUT_DATA_DUMMY9__ */

#ifndef __OUT_DATA_DUMMY10__
#define __OUT_DATA_DUMMY10__
#define OUT_DATA_DUMMY10(x) (x)->out_data_dummy10_register.out_data_dummy10_u.out_data_dummy10
#define gp_regs_DUMMY10(x) (x)->out_data_dummy10_register.out_data_dummy10_u.bits.dummy10
typedef volatile struct out_data_dummy10_s {
	union {
		struct {
			unsigned int dummy10 : 32;
		} bits;
		uint32_t out_data_dummy10;
	} out_data_dummy10_u;
} out_data_dummy10_t;
#endif /* __OUT_DATA_DUMMY10__ */

#ifndef __OUT_DATA_DUMMY11__
#define __OUT_DATA_DUMMY11__
#define OUT_DATA_DUMMY11(x) (x)->out_data_dummy11_register.out_data_dummy11_u.out_data_dummy11
#define gp_regs_DUMMY11(x) (x)->out_data_dummy11_register.out_data_dummy11_u.bits.dummy11
typedef volatile struct out_data_dummy11_s {
	union {
		struct {
			unsigned int dummy11 : 32;
		} bits;
		uint32_t out_data_dummy11;
	} out_data_dummy11_u;
} out_data_dummy11_t;
#endif /* __OUT_DATA_DUMMY11__ */

#ifndef __OUT_DATA_DUMMY12__
#define __OUT_DATA_DUMMY12__
#define OUT_DATA_DUMMY12(x) (x)->out_data_dummy12_register.out_data_dummy12_u.out_data_dummy12
#define gp_regs_DUMMY12(x) (x)->out_data_dummy12_register.out_data_dummy12_u.bits.dummy12
typedef volatile struct out_data_dummy12_s {
	union {
		struct {
			unsigned int dummy12 : 32;
		} bits;
		uint32_t out_data_dummy12;
	} out_data_dummy12_u;
} out_data_dummy12_t;
#endif /* __OUT_DATA_DUMMY12__ */

#ifndef __OUT_DATA_DUMMY13__
#define __OUT_DATA_DUMMY13__
#define OUT_DATA_DUMMY13(x) (x)->out_data_dummy13_register.out_data_dummy13_u.out_data_dummy13
#define gp_regs_DUMMY13(x) (x)->out_data_dummy13_register.out_data_dummy13_u.bits.dummy13
typedef volatile struct out_data_dummy13_s {
	union {
		struct {
			unsigned int dummy13 : 32;
		} bits;
		uint32_t out_data_dummy13;
	} out_data_dummy13_u;
} out_data_dummy13_t;
#endif /* __OUT_DATA_DUMMY13__ */

#ifndef __OUT_DATA_DUMMY14__
#define __OUT_DATA_DUMMY14__
#define OUT_DATA_DUMMY14(x) (x)->out_data_dummy14_register.out_data_dummy14_u.out_data_dummy14
#define gp_regs_DUMMY14(x) (x)->out_data_dummy14_register.out_data_dummy14_u.bits.dummy14
typedef volatile struct out_data_dummy14_s {
	union {
		struct {
			unsigned int dummy14 : 32;
		} bits;
		uint32_t out_data_dummy14;
	} out_data_dummy14_u;
} out_data_dummy14_t;
#endif /* __OUT_DATA_DUMMY14__ */

#ifndef __OUT_DATA_DUMMY15__
#define __OUT_DATA_DUMMY15__
#define OUT_DATA_DUMMY15(x) (x)->out_data_dummy15_register.out_data_dummy15_u.out_data_dummy15
#define gp_regs_DUMMY15(x) (x)->out_data_dummy15_register.out_data_dummy15_u.bits.dummy15
typedef volatile struct out_data_dummy15_s {
	union {
		struct {
			unsigned int dummy15 : 32;
		} bits;
		uint32_t out_data_dummy15;
	} out_data_dummy15_u;
} out_data_dummy15_t;
#endif /* __OUT_DATA_DUMMY15__ */

#ifndef __OUT_DATA_DUMMY16__
#define __OUT_DATA_DUMMY16__
#define OUT_DATA_DUMMY16(x) (x)->out_data_dummy16_register.out_data_dummy16_u.out_data_dummy16
#define gp_regs_DUMMY16(x) (x)->out_data_dummy16_register.out_data_dummy16_u.bits.dummy16
typedef volatile struct out_data_dummy16_s {
	union {
		struct {
			unsigned int dummy16 : 32;
		} bits;
		uint32_t out_data_dummy16;
	} out_data_dummy16_u;
} out_data_dummy16_t;
#endif /* __OUT_DATA_DUMMY16__ */

#ifndef __OUT_DATA_DUMMY17__
#define __OUT_DATA_DUMMY17__
#define OUT_DATA_DUMMY17(x) (x)->out_data_dummy17_register.out_data_dummy17_u.out_data_dummy17
#define gp_regs_DUMMY17(x) (x)->out_data_dummy17_register.out_data_dummy17_u.bits.dummy17
typedef volatile struct out_data_dummy17_s {
	union {
		struct {
			unsigned int dummy17 : 32;
		} bits;
		uint32_t out_data_dummy17;
	} out_data_dummy17_u;
} out_data_dummy17_t;
#endif /* __OUT_DATA_DUMMY17__ */

#ifndef __CORE_DUMMY__
#define __CORE_DUMMY__
#define CORE_DUMMY(x) (x)->core_dummy_register.core_dummy_u.core_dummy
#define gp_regs_DUMMY_CORE_DATA(x) (x)->core_dummy_register.core_dummy_u.bits.dummy_core_data
typedef volatile struct core_dummy_s {
	union {
		struct {
			unsigned int dummy_core_data : 11;
		} bits;
		uint32_t core_dummy;
	} core_dummy_u;
} core_dummy_t;
#endif /* __CORE_DUMMY__ */

#ifndef __MEM_PLAY_TRIGGER1__
#define __MEM_PLAY_TRIGGER1__
#define MEM_PLAY_TRIGGER1(x) (x)->mem_play_trigger1_register.mem_play_trigger1_u.mem_play_trigger1
#define gp_regs_DAC1_TRIGGER(x) (x)->mem_play_trigger1_register.mem_play_trigger1_u.bits.dac1_trigger
typedef volatile struct mem_play_trigger1_s {
	union {
		struct {
			unsigned int dac1_trigger : 1;
		} bits;
		uint32_t mem_play_trigger1;
	} mem_play_trigger1_u;
} mem_play_trigger1_t;
#endif /* __MEM_PLAY_TRIGGER1__ */

#ifndef __MEM_PLAY_TRIGGER2__
#define __MEM_PLAY_TRIGGER2__
#define MEM_PLAY_TRIGGER2(x) (x)->mem_play_trigger2_register.mem_play_trigger2_u.mem_play_trigger2
#define gp_regs_DAC2_TRIGGER(x) (x)->mem_play_trigger2_register.mem_play_trigger2_u.bits.dac2_trigger
typedef volatile struct mem_play_trigger2_s {
	union {
		struct {
			unsigned int dac2_trigger : 1;
		} bits;
		uint32_t mem_play_trigger2;
	} mem_play_trigger2_u;
} mem_play_trigger2_t;
#endif /* __MEM_PLAY_TRIGGER2__ */

#ifndef __TEST_MEM_PLAY_TRIGGER1__
#define __TEST_MEM_PLAY_TRIGGER1__
#define TEST_MEM_PLAY_TRIGGER1(x) (x)->test_mem_play_trigger1_register.test_mem_play_trigger1_u.test_mem_play_trigger1
#define gp_regs_TEST_DAC1_TRIGGER(x) (x)->test_mem_play_trigger1_register.test_mem_play_trigger1_u.bits.test_dac1_trigger
typedef volatile struct test_mem_play_trigger1_s {
	union {
		struct {
			unsigned int test_dac1_trigger : 1;
		} bits;
		uint32_t test_mem_play_trigger1;
	} test_mem_play_trigger1_u;
} test_mem_play_trigger1_t;
#endif /* __TEST_MEM_PLAY_TRIGGER1__ */

#ifndef __TEST_MEM_PLAY_TRIGGER2__
#define __TEST_MEM_PLAY_TRIGGER2__
#define TEST_MEM_PLAY_TRIGGER2(x) (x)->test_mem_play_trigger2_register.test_mem_play_trigger2_u.test_mem_play_trigger2
#define gp_regs_TEST_DAC2_TRIGGER(x) (x)->test_mem_play_trigger2_register.test_mem_play_trigger2_u.bits.test_dac2_trigger
typedef volatile struct test_mem_play_trigger2_s {
	union {
		struct {
			unsigned int test_dac2_trigger : 1;
		} bits;
		uint32_t test_mem_play_trigger2;
	} test_mem_play_trigger2_u;
} test_mem_play_trigger2_t;
#endif /* __TEST_MEM_PLAY_TRIGGER2__ */

#ifndef __LMFC_IRQ_CONTROL__
#define __LMFC_IRQ_CONTROL__
#define LMFC_IRQ_CONTROL(x) (x)->lmfc_irq_control_register.lmfc_irq_control_u.lmfc_irq_control
#define gp_regs_ENABLE_LMFC_COUNT(x) (x)->lmfc_irq_control_register.lmfc_irq_control_u.bits.enable_lmfc_count
#define gp_regs_LMFC_IRQ_COMPARE(x) (x)->lmfc_irq_control_register.lmfc_irq_control_u.bits.lmfc_irq_compare
typedef volatile struct lmfc_irq_control_s {
	union {
		struct {
			unsigned int enable_lmfc_count : 1;
			unsigned int lmfc_irq_compare : 16;
		} bits;
		uint32_t lmfc_irq_control;
	} lmfc_irq_control_u;
} lmfc_irq_control_t;
#endif /* __LMFC_IRQ_CONTROL__ */

#ifndef __LMFC_COUNTER__
#define __LMFC_COUNTER__
#define LMFC_COUNTER(x) (x)->lmfc_counter_register.lmfc_counter_u.lmfc_counter
#define gp_regs_LMFC_COUNTER(x) (x)->lmfc_counter_register.lmfc_counter_u.bits.lmfc_counter
typedef volatile struct lmfc_counter_s {
	union {
		struct {
			unsigned int lmfc_counter : 16;
		} bits;
		uint32_t lmfc_counter;
	} lmfc_counter_u;
} lmfc_counter_t;
#endif /* __LMFC_COUNTER__ */

#ifndef __LMFC_IRQ_ACK__
#define __LMFC_IRQ_ACK__
#define LMFC_IRQ_ACK(x) (x)->lmfc_irq_ack_register.lmfc_irq_ack_u.lmfc_irq_ack
#define gp_regs_LMFC_IRQ_ACK(x) (x)->lmfc_irq_ack_register.lmfc_irq_ack_u.bits.lmfc_irq_ack
typedef volatile struct lmfc_irq_ack_s {
	union {
		struct {
			unsigned int lmfc_irq_ack : 1;
		} bits;
		uint32_t lmfc_irq_ack;
	} lmfc_irq_ack_u;
} lmfc_irq_ack_t;
#endif /* __LMFC_IRQ_ACK__ */

#ifndef __OOB_TO_GC__
#define __OOB_TO_GC__
#define OOB_TO_GC(x) (x)->oob_to_gc_register.oob_to_gc_u.oob_to_gc
#define gp_regs_OOB_TO_GC(x) (x)->oob_to_gc_register.oob_to_gc_u.bits.oob_to_gc
typedef volatile struct oob_to_gc_s {
	union {
		struct {
			unsigned int oob_to_gc : 32;
		} bits;
		uint32_t oob_to_gc;
	} oob_to_gc_u;
} oob_to_gc_t;
#endif /* __OOB_TO_GC__ */

#ifndef __OOB_IRQ_ACK__
#define __OOB_IRQ_ACK__
#define OOB_IRQ_ACK(x) (x)->oob_irq_ack_register.oob_irq_ack_u.oob_irq_ack
#define gp_regs_OOB_IRQ_ACK(x) (x)->oob_irq_ack_register.oob_irq_ack_u.bits.oob_irq_ack
typedef volatile struct oob_irq_ack_s {
	union {
		struct {
			unsigned int oob_irq_ack : 1;
		} bits;
		uint32_t oob_irq_ack;
	} oob_irq_ack_u;
} oob_irq_ack_t;
#endif /* __OOB_IRQ_ACK__ */

#ifndef __GC_TO_OOB__
#define __GC_TO_OOB__
#define GC_TO_OOB(x) (x)->gc_to_oob_register.gc_to_oob_u.gc_to_oob
#define gp_regs_GC_TO_OOB(x) (x)->gc_to_oob_register.gc_to_oob_u.bits.gc_to_oob
typedef volatile struct gc_to_oob_s {
	union {
		struct {
			unsigned int gc_to_oob : 32;
		} bits;
		uint32_t gc_to_oob;
	} gc_to_oob_u;
} gc_to_oob_t;
#endif /* __GC_TO_OOB__ */

typedef struct gp_regs_s
{
	ext_adc_cal_ctrl_t ext_adc_cal_ctrl_register;	// Address: 0x0
	ext_adc_run_ctrl_t ext_adc_run_ctrl_register;	// Address: 0x1
	oops3_t oops3_register;	// Address: 0x2
	oops4_t oops4_register;	// Address: 0x3
	oops5_t oops5_register;	// Address: 0x4
	timer_control_atten_t timer_control_atten_register;	// Address: 0x5
	atten_t atten_register;	// Address: 0x6
	rx_tx_gp_t rx_tx_gp_register;	// Address: 0x7
	force_frame_sync_t force_frame_sync_register;	// Address: 0x8
	adc_dac_loopback_en_t adc_dac_loopback_en_register;	// Address: 0x9
	atten_driver_ctrl_t atten_driver_ctrl_register;	// Address: 0xa
	mem_cap_trigger1_t mem_cap_trigger1_register;	// Address: 0xb
	mem_cap_trigger2_t mem_cap_trigger2_register;	// Address: 0xc
	test_mem_cap_trigger1_t test_mem_cap_trigger1_register;	// Address: 0xd
	test_mem_cap_trigger2_t test_mem_cap_trigger2_register;	// Address: 0xe
	dac_comp_mult_dummy_t dac_comp_mult_dummy_register;	// Address: 0xf
	out_data_dummy5_t out_data_dummy5_register;	// Address: 0x10
	out_data_dummy6_t out_data_dummy6_register;	// Address: 0x11
	out_data_dummy7_t out_data_dummy7_register;	// Address: 0x12
	out_data_dummy8_t out_data_dummy8_register;	// Address: 0x13
	out_data_dummy9_t out_data_dummy9_register;	// Address: 0x14
	out_data_dummy10_t out_data_dummy10_register;	// Address: 0x15
	out_data_dummy11_t out_data_dummy11_register;	// Address: 0x16
	out_data_dummy12_t out_data_dummy12_register;	// Address: 0x17
	out_data_dummy13_t out_data_dummy13_register;	// Address: 0x18
	out_data_dummy14_t out_data_dummy14_register;	// Address: 0x19
	out_data_dummy15_t out_data_dummy15_register;	// Address: 0x1a
	out_data_dummy16_t out_data_dummy16_register;	// Address: 0x1b
	out_data_dummy17_t out_data_dummy17_register;	// Address: 0x1c
	core_dummy_t core_dummy_register;	// Address: 0x1d
	mem_play_trigger1_t mem_play_trigger1_register;	// Address: 0x1e
	mem_play_trigger2_t mem_play_trigger2_register;	// Address: 0x1f
	test_mem_play_trigger1_t test_mem_play_trigger1_register;	// Address: 0x20
	test_mem_play_trigger2_t test_mem_play_trigger2_register;	// Address: 0x21
	lmfc_irq_control_t lmfc_irq_control_register;	// Address: 0x22
	lmfc_counter_t lmfc_counter_register;	// Address: 0x23
	lmfc_irq_ack_t lmfc_irq_ack_register;	// Address: 0x24
	oob_to_gc_t oob_to_gc_register;	// Address: 0x25
	oob_irq_ack_t oob_irq_ack_register;	// Address: 0x26
	gc_to_oob_t gc_to_oob_register;	// Address: 0x27
} gp_regs_t;

#endif /* __GP_REGS_REGISTERS__ */
