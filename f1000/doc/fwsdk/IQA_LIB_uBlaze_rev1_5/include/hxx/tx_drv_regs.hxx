//*******************************************************************************
//      __  __                                                                  *
//     /  \/  \                                                                 *
//         \   \                                                                *
//    I Q - A N A L O G                                                         *
//           \   \            IQ-Analog Corp                                    *
//            \__/\__/       www.iqanalog.com                                   *
//                                                                              *
//------------------------------------------------------------------------------*
//                                                                              *
// Copyright (C) 2018-2019 IQ-Analog Corp. All rights reserved.                 *
//                                                                              *
//------------------------------------------------------------------------------*
// IQ-Analog CONFIDENTIAL                                                       *
//------------------------------------------------------------------------------*
//                                                                              *
// This file is released with "Government Purpose Rights" as defined            *
// in DFARS SUBPART 227.71, clause 252.227-7013.                                *
//                                                                              *
//*******************************************************************************

// Generated by RMM v3.1.4
// IQ-Analog Corp. 2013-2018.

#ifndef __TX_DRV_REGS__
#define __TX_DRV_REGS__

#ifndef __TX_P2S_RESET_CTRL__
#define __TX_P2S_RESET_CTRL__
#define TX_P2S_RESET_CTRL(x) (x)->tx_p2s_reset_ctrl_register.tx_p2s_reset_ctrl_u.tx_p2s_reset_ctrl
#define tx_drv_regs_LANE0_RST_N(x) (x)->tx_p2s_reset_ctrl_register.tx_p2s_reset_ctrl_u.bits.lane0_rst_n
#define tx_drv_regs_LANE1_RST_N(x) (x)->tx_p2s_reset_ctrl_register.tx_p2s_reset_ctrl_u.bits.lane1_rst_n
#define tx_drv_regs_LANE2_RST_N(x) (x)->tx_p2s_reset_ctrl_register.tx_p2s_reset_ctrl_u.bits.lane2_rst_n
#define tx_drv_regs_LANE3_RST_N(x) (x)->tx_p2s_reset_ctrl_register.tx_p2s_reset_ctrl_u.bits.lane3_rst_n
#define tx_drv_regs_LANE4_RST_N(x) (x)->tx_p2s_reset_ctrl_register.tx_p2s_reset_ctrl_u.bits.lane4_rst_n
#define tx_drv_regs_LANE5_RST_N(x) (x)->tx_p2s_reset_ctrl_register.tx_p2s_reset_ctrl_u.bits.lane5_rst_n
#define tx_drv_regs_LANE6_RST_N(x) (x)->tx_p2s_reset_ctrl_register.tx_p2s_reset_ctrl_u.bits.lane6_rst_n
#define tx_drv_regs_LANE7_RST_N(x) (x)->tx_p2s_reset_ctrl_register.tx_p2s_reset_ctrl_u.bits.lane7_rst_n
typedef volatile struct tx_p2s_reset_ctrl_s {
	union {
		struct {
			unsigned int lane0_rst_n : 1;
			unsigned int lane1_rst_n : 1;
			unsigned int lane2_rst_n : 1;
			unsigned int lane3_rst_n : 1;
			unsigned int lane4_rst_n : 1;
			unsigned int lane5_rst_n : 1;
			unsigned int lane6_rst_n : 1;
			unsigned int lane7_rst_n : 1;
		} bits;
		uint32_t tx_p2s_reset_ctrl;
	} tx_p2s_reset_ctrl_u;
} tx_p2s_reset_ctrl_t;
#endif /* __TX_P2S_RESET_CTRL__ */

#ifndef __TX_P2S_MODE_CTRL__
#define __TX_P2S_MODE_CTRL__
#define TX_P2S_MODE_CTRL(x) (x)->tx_p2s_mode_ctrl_register.tx_p2s_mode_ctrl_u.tx_p2s_mode_ctrl
#define tx_drv_regs_OUTPUT_MODE(x) (x)->tx_p2s_mode_ctrl_register.tx_p2s_mode_ctrl_u.bits.output_mode
#define tx_drv_regs_LOAD_RST_N(x) (x)->tx_p2s_mode_ctrl_register.tx_p2s_mode_ctrl_u.bits.load_rst_n
typedef volatile struct tx_p2s_mode_ctrl_s {
	union {
		struct {
			unsigned int output_mode : 1;
			unsigned int load_rst_n : 1;
		} bits;
		uint32_t tx_p2s_mode_ctrl;
	} tx_p2s_mode_ctrl_u;
} tx_p2s_mode_ctrl_t;
#endif /* __TX_P2S_MODE_CTRL__ */

#ifndef __TX_P2S_LOAD_SDR__
#define __TX_P2S_LOAD_SDR__
#define TX_P2S_LOAD_SDR(x) (x)->tx_p2s_load_sdr_register.tx_p2s_load_sdr_u.tx_p2s_load_sdr
#define tx_drv_regs_LOAD_SDR(x) (x)->tx_p2s_load_sdr_register.tx_p2s_load_sdr_u.bits.load_sdr
typedef volatile struct tx_p2s_load_sdr_s {
	union {
		struct {
			unsigned int load_sdr : 10;
		} bits;
		uint32_t tx_p2s_load_sdr;
	} tx_p2s_load_sdr_u;
} tx_p2s_load_sdr_t;
#endif /* __TX_P2S_LOAD_SDR__ */

#ifndef __TX_P2S_LOAD_DDR__
#define __TX_P2S_LOAD_DDR__
#define TX_P2S_LOAD_DDR(x) (x)->tx_p2s_load_ddr_register.tx_p2s_load_ddr_u.tx_p2s_load_ddr
#define tx_drv_regs_LOAD_DDR(x) (x)->tx_p2s_load_ddr_register.tx_p2s_load_ddr_u.bits.load_ddr
typedef volatile struct tx_p2s_load_ddr_s {
	union {
		struct {
			unsigned int load_ddr : 10;
		} bits;
		uint32_t tx_p2s_load_ddr;
	} tx_p2s_load_ddr_u;
} tx_p2s_load_ddr_t;
#endif /* __TX_P2S_LOAD_DDR__ */

#ifndef __TX_P2S_LANE0_CTRL__
#define __TX_P2S_LANE0_CTRL__
#define TX_P2S_LANE0_CTRL(x) (x)->tx_p2s_lane0_ctrl_register.tx_p2s_lane0_ctrl_u.tx_p2s_lane0_ctrl
#define tx_drv_regs_LANE0_D_POL(x) (x)->tx_p2s_lane0_ctrl_register.tx_p2s_lane0_ctrl_u.bits.lane0_d_pol
#define tx_drv_regs_LANE0_CLK_POL(x) (x)->tx_p2s_lane0_ctrl_register.tx_p2s_lane0_ctrl_u.bits.lane0_clk_pol
#define tx_drv_regs_LANE0_PP_POL(x) (x)->tx_p2s_lane0_ctrl_register.tx_p2s_lane0_ctrl_u.bits.lane0_pp_pol
#define tx_drv_regs_LANE0_PM_POL(x) (x)->tx_p2s_lane0_ctrl_register.tx_p2s_lane0_ctrl_u.bits.lane0_pm_pol
#define tx_drv_regs_LANE0_DP_CTRL(x) (x)->tx_p2s_lane0_ctrl_register.tx_p2s_lane0_ctrl_u.bits.lane0_dp_ctrl
#define tx_drv_regs_LANE0_DM_CTRL(x) (x)->tx_p2s_lane0_ctrl_register.tx_p2s_lane0_ctrl_u.bits.lane0_dm_ctrl
#define tx_drv_regs_LANE0_ZP_POL(x) (x)->tx_p2s_lane0_ctrl_register.tx_p2s_lane0_ctrl_u.bits.lane0_zp_pol
#define tx_drv_regs_LANE0_ZM_POL(x) (x)->tx_p2s_lane0_ctrl_register.tx_p2s_lane0_ctrl_u.bits.lane0_zm_pol
typedef volatile struct tx_p2s_lane0_ctrl_s {
	union {
		struct {
			unsigned int lane0_d_pol : 1;
			unsigned int lane0_clk_pol : 1;
			unsigned int lane0_pp_pol : 1;
			unsigned int lane0_pm_pol : 1;
			unsigned int lane0_dp_ctrl : 5;
			unsigned int lane0_dm_ctrl : 5;
			unsigned int lane0_zp_pol : 1;
			unsigned int lane0_zm_pol : 1;
		} bits;
		uint32_t tx_p2s_lane0_ctrl;
	} tx_p2s_lane0_ctrl_u;
} tx_p2s_lane0_ctrl_t;
#endif /* __TX_P2S_LANE0_CTRL__ */

#ifndef __TX_P2S_LANE1_CTRL__
#define __TX_P2S_LANE1_CTRL__
#define TX_P2S_LANE1_CTRL(x) (x)->tx_p2s_lane1_ctrl_register.tx_p2s_lane1_ctrl_u.tx_p2s_lane1_ctrl
#define tx_drv_regs_LANE1_D_POL(x) (x)->tx_p2s_lane1_ctrl_register.tx_p2s_lane1_ctrl_u.bits.lane1_d_pol
#define tx_drv_regs_LANE1_CLK_POL(x) (x)->tx_p2s_lane1_ctrl_register.tx_p2s_lane1_ctrl_u.bits.lane1_clk_pol
#define tx_drv_regs_LANE1_PP_POL(x) (x)->tx_p2s_lane1_ctrl_register.tx_p2s_lane1_ctrl_u.bits.lane1_pp_pol
#define tx_drv_regs_LANE1_PM_POL(x) (x)->tx_p2s_lane1_ctrl_register.tx_p2s_lane1_ctrl_u.bits.lane1_pm_pol
#define tx_drv_regs_LANE1_DP_CTRL(x) (x)->tx_p2s_lane1_ctrl_register.tx_p2s_lane1_ctrl_u.bits.lane1_dp_ctrl
#define tx_drv_regs_LANE1_DM_CTRL(x) (x)->tx_p2s_lane1_ctrl_register.tx_p2s_lane1_ctrl_u.bits.lane1_dm_ctrl
#define tx_drv_regs_LANE1_ZP_POL(x) (x)->tx_p2s_lane1_ctrl_register.tx_p2s_lane1_ctrl_u.bits.lane1_zp_pol
#define tx_drv_regs_LANE1_ZM_POL(x) (x)->tx_p2s_lane1_ctrl_register.tx_p2s_lane1_ctrl_u.bits.lane1_zm_pol
typedef volatile struct tx_p2s_lane1_ctrl_s {
	union {
		struct {
			unsigned int lane1_d_pol : 1;
			unsigned int lane1_clk_pol : 1;
			unsigned int lane1_pp_pol : 1;
			unsigned int lane1_pm_pol : 1;
			unsigned int lane1_dp_ctrl : 5;
			unsigned int lane1_dm_ctrl : 5;
			unsigned int lane1_zp_pol : 1;
			unsigned int lane1_zm_pol : 1;
		} bits;
		uint32_t tx_p2s_lane1_ctrl;
	} tx_p2s_lane1_ctrl_u;
} tx_p2s_lane1_ctrl_t;
#endif /* __TX_P2S_LANE1_CTRL__ */

#ifndef __TX_P2S_LANE2_CTRL__
#define __TX_P2S_LANE2_CTRL__
#define TX_P2S_LANE2_CTRL(x) (x)->tx_p2s_lane2_ctrl_register.tx_p2s_lane2_ctrl_u.tx_p2s_lane2_ctrl
#define tx_drv_regs_LANE2_D_POL(x) (x)->tx_p2s_lane2_ctrl_register.tx_p2s_lane2_ctrl_u.bits.lane2_d_pol
#define tx_drv_regs_LANE2_CLK_POL(x) (x)->tx_p2s_lane2_ctrl_register.tx_p2s_lane2_ctrl_u.bits.lane2_clk_pol
#define tx_drv_regs_LANE2_PP_POL(x) (x)->tx_p2s_lane2_ctrl_register.tx_p2s_lane2_ctrl_u.bits.lane2_pp_pol
#define tx_drv_regs_LANE2_PM_POL(x) (x)->tx_p2s_lane2_ctrl_register.tx_p2s_lane2_ctrl_u.bits.lane2_pm_pol
#define tx_drv_regs_LANE2_DP_CTRL(x) (x)->tx_p2s_lane2_ctrl_register.tx_p2s_lane2_ctrl_u.bits.lane2_dp_ctrl
#define tx_drv_regs_LANE2_DM_CTRL(x) (x)->tx_p2s_lane2_ctrl_register.tx_p2s_lane2_ctrl_u.bits.lane2_dm_ctrl
#define tx_drv_regs_LANE2_ZP_POL(x) (x)->tx_p2s_lane2_ctrl_register.tx_p2s_lane2_ctrl_u.bits.lane2_zp_pol
#define tx_drv_regs_LANE2_ZM_POL(x) (x)->tx_p2s_lane2_ctrl_register.tx_p2s_lane2_ctrl_u.bits.lane2_zm_pol
typedef volatile struct tx_p2s_lane2_ctrl_s {
	union {
		struct {
			unsigned int lane2_d_pol : 1;
			unsigned int lane2_clk_pol : 1;
			unsigned int lane2_pp_pol : 1;
			unsigned int lane2_pm_pol : 1;
			unsigned int lane2_dp_ctrl : 5;
			unsigned int lane2_dm_ctrl : 5;
			unsigned int lane2_zp_pol : 1;
			unsigned int lane2_zm_pol : 1;
		} bits;
		uint32_t tx_p2s_lane2_ctrl;
	} tx_p2s_lane2_ctrl_u;
} tx_p2s_lane2_ctrl_t;
#endif /* __TX_P2S_LANE2_CTRL__ */

#ifndef __TX_P2S_LANE3_CTRL__
#define __TX_P2S_LANE3_CTRL__
#define TX_P2S_LANE3_CTRL(x) (x)->tx_p2s_lane3_ctrl_register.tx_p2s_lane3_ctrl_u.tx_p2s_lane3_ctrl
#define tx_drv_regs_LANE3_D_POL(x) (x)->tx_p2s_lane3_ctrl_register.tx_p2s_lane3_ctrl_u.bits.lane3_d_pol
#define tx_drv_regs_LANE3_CLK_POL(x) (x)->tx_p2s_lane3_ctrl_register.tx_p2s_lane3_ctrl_u.bits.lane3_clk_pol
#define tx_drv_regs_LANE3_PP_POL(x) (x)->tx_p2s_lane3_ctrl_register.tx_p2s_lane3_ctrl_u.bits.lane3_pp_pol
#define tx_drv_regs_LANE3_PM_POL(x) (x)->tx_p2s_lane3_ctrl_register.tx_p2s_lane3_ctrl_u.bits.lane3_pm_pol
#define tx_drv_regs_LANE3_DP_CTRL(x) (x)->tx_p2s_lane3_ctrl_register.tx_p2s_lane3_ctrl_u.bits.lane3_dp_ctrl
#define tx_drv_regs_LANE3_DM_CTRL(x) (x)->tx_p2s_lane3_ctrl_register.tx_p2s_lane3_ctrl_u.bits.lane3_dm_ctrl
#define tx_drv_regs_LANE3_ZP_POL(x) (x)->tx_p2s_lane3_ctrl_register.tx_p2s_lane3_ctrl_u.bits.lane3_zp_pol
#define tx_drv_regs_LANE3_ZM_POL(x) (x)->tx_p2s_lane3_ctrl_register.tx_p2s_lane3_ctrl_u.bits.lane3_zm_pol
typedef volatile struct tx_p2s_lane3_ctrl_s {
	union {
		struct {
			unsigned int lane3_d_pol : 1;
			unsigned int lane3_clk_pol : 1;
			unsigned int lane3_pp_pol : 1;
			unsigned int lane3_pm_pol : 1;
			unsigned int lane3_dp_ctrl : 5;
			unsigned int lane3_dm_ctrl : 5;
			unsigned int lane3_zp_pol : 1;
			unsigned int lane3_zm_pol : 1;
		} bits;
		uint32_t tx_p2s_lane3_ctrl;
	} tx_p2s_lane3_ctrl_u;
} tx_p2s_lane3_ctrl_t;
#endif /* __TX_P2S_LANE3_CTRL__ */

#ifndef __TX_P2S_LANE4_CTRL__
#define __TX_P2S_LANE4_CTRL__
#define TX_P2S_LANE4_CTRL(x) (x)->tx_p2s_lane4_ctrl_register.tx_p2s_lane4_ctrl_u.tx_p2s_lane4_ctrl
#define tx_drv_regs_LANE4_D_POL(x) (x)->tx_p2s_lane4_ctrl_register.tx_p2s_lane4_ctrl_u.bits.lane4_d_pol
#define tx_drv_regs_LANE4_CLK_POL(x) (x)->tx_p2s_lane4_ctrl_register.tx_p2s_lane4_ctrl_u.bits.lane4_clk_pol
#define tx_drv_regs_LANE4_PP_POL(x) (x)->tx_p2s_lane4_ctrl_register.tx_p2s_lane4_ctrl_u.bits.lane4_pp_pol
#define tx_drv_regs_LANE4_PM_POL(x) (x)->tx_p2s_lane4_ctrl_register.tx_p2s_lane4_ctrl_u.bits.lane4_pm_pol
#define tx_drv_regs_LANE4_DP_CTRL(x) (x)->tx_p2s_lane4_ctrl_register.tx_p2s_lane4_ctrl_u.bits.lane4_dp_ctrl
#define tx_drv_regs_LANE4_DM_CTRL(x) (x)->tx_p2s_lane4_ctrl_register.tx_p2s_lane4_ctrl_u.bits.lane4_dm_ctrl
#define tx_drv_regs_LANE4_ZP_POL(x) (x)->tx_p2s_lane4_ctrl_register.tx_p2s_lane4_ctrl_u.bits.lane4_zp_pol
#define tx_drv_regs_LANE4_ZM_POL(x) (x)->tx_p2s_lane4_ctrl_register.tx_p2s_lane4_ctrl_u.bits.lane4_zm_pol
typedef volatile struct tx_p2s_lane4_ctrl_s {
	union {
		struct {
			unsigned int lane4_d_pol : 1;
			unsigned int lane4_clk_pol : 1;
			unsigned int lane4_pp_pol : 1;
			unsigned int lane4_pm_pol : 1;
			unsigned int lane4_dp_ctrl : 5;
			unsigned int lane4_dm_ctrl : 5;
			unsigned int lane4_zp_pol : 1;
			unsigned int lane4_zm_pol : 1;
		} bits;
		uint32_t tx_p2s_lane4_ctrl;
	} tx_p2s_lane4_ctrl_u;
} tx_p2s_lane4_ctrl_t;
#endif /* __TX_P2S_LANE4_CTRL__ */

#ifndef __TX_P2S_LANE5_CTRL__
#define __TX_P2S_LANE5_CTRL__
#define TX_P2S_LANE5_CTRL(x) (x)->tx_p2s_lane5_ctrl_register.tx_p2s_lane5_ctrl_u.tx_p2s_lane5_ctrl
#define tx_drv_regs_LANE5_D_POL(x) (x)->tx_p2s_lane5_ctrl_register.tx_p2s_lane5_ctrl_u.bits.lane5_d_pol
#define tx_drv_regs_LANE5_CLK_POL(x) (x)->tx_p2s_lane5_ctrl_register.tx_p2s_lane5_ctrl_u.bits.lane5_clk_pol
#define tx_drv_regs_LANE5_PP_POL(x) (x)->tx_p2s_lane5_ctrl_register.tx_p2s_lane5_ctrl_u.bits.lane5_pp_pol
#define tx_drv_regs_LANE5_PM_POL(x) (x)->tx_p2s_lane5_ctrl_register.tx_p2s_lane5_ctrl_u.bits.lane5_pm_pol
#define tx_drv_regs_LANE5_DP_CTRL(x) (x)->tx_p2s_lane5_ctrl_register.tx_p2s_lane5_ctrl_u.bits.lane5_dp_ctrl
#define tx_drv_regs_LANE5_DM_CTRL(x) (x)->tx_p2s_lane5_ctrl_register.tx_p2s_lane5_ctrl_u.bits.lane5_dm_ctrl
#define tx_drv_regs_LANE5_ZP_POL(x) (x)->tx_p2s_lane5_ctrl_register.tx_p2s_lane5_ctrl_u.bits.lane5_zp_pol
#define tx_drv_regs_LANE5_ZM_POL(x) (x)->tx_p2s_lane5_ctrl_register.tx_p2s_lane5_ctrl_u.bits.lane5_zm_pol
typedef volatile struct tx_p2s_lane5_ctrl_s {
	union {
		struct {
			unsigned int lane5_d_pol : 1;
			unsigned int lane5_clk_pol : 1;
			unsigned int lane5_pp_pol : 1;
			unsigned int lane5_pm_pol : 1;
			unsigned int lane5_dp_ctrl : 5;
			unsigned int lane5_dm_ctrl : 5;
			unsigned int lane5_zp_pol : 1;
			unsigned int lane5_zm_pol : 1;
		} bits;
		uint32_t tx_p2s_lane5_ctrl;
	} tx_p2s_lane5_ctrl_u;
} tx_p2s_lane5_ctrl_t;
#endif /* __TX_P2S_LANE5_CTRL__ */

#ifndef __TX_P2S_LANE6_CTRL__
#define __TX_P2S_LANE6_CTRL__
#define TX_P2S_LANE6_CTRL(x) (x)->tx_p2s_lane6_ctrl_register.tx_p2s_lane6_ctrl_u.tx_p2s_lane6_ctrl
#define tx_drv_regs_LANE6_D_POL(x) (x)->tx_p2s_lane6_ctrl_register.tx_p2s_lane6_ctrl_u.bits.lane6_d_pol
#define tx_drv_regs_LANE6_CLK_POL(x) (x)->tx_p2s_lane6_ctrl_register.tx_p2s_lane6_ctrl_u.bits.lane6_clk_pol
#define tx_drv_regs_LANE6_PP_POL(x) (x)->tx_p2s_lane6_ctrl_register.tx_p2s_lane6_ctrl_u.bits.lane6_pp_pol
#define tx_drv_regs_LANE6_PM_POL(x) (x)->tx_p2s_lane6_ctrl_register.tx_p2s_lane6_ctrl_u.bits.lane6_pm_pol
#define tx_drv_regs_LANE6_DP_CTRL(x) (x)->tx_p2s_lane6_ctrl_register.tx_p2s_lane6_ctrl_u.bits.lane6_dp_ctrl
#define tx_drv_regs_LANE6_DM_CTRL(x) (x)->tx_p2s_lane6_ctrl_register.tx_p2s_lane6_ctrl_u.bits.lane6_dm_ctrl
#define tx_drv_regs_LANE6_ZP_POL(x) (x)->tx_p2s_lane6_ctrl_register.tx_p2s_lane6_ctrl_u.bits.lane6_zp_pol
#define tx_drv_regs_LANE6_ZM_POL(x) (x)->tx_p2s_lane6_ctrl_register.tx_p2s_lane6_ctrl_u.bits.lane6_zm_pol
typedef volatile struct tx_p2s_lane6_ctrl_s {
	union {
		struct {
			unsigned int lane6_d_pol : 1;
			unsigned int lane6_clk_pol : 1;
			unsigned int lane6_pp_pol : 1;
			unsigned int lane6_pm_pol : 1;
			unsigned int lane6_dp_ctrl : 5;
			unsigned int lane6_dm_ctrl : 5;
			unsigned int lane6_zp_pol : 1;
			unsigned int lane6_zm_pol : 1;
		} bits;
		uint32_t tx_p2s_lane6_ctrl;
	} tx_p2s_lane6_ctrl_u;
} tx_p2s_lane6_ctrl_t;
#endif /* __TX_P2S_LANE6_CTRL__ */

#ifndef __TX_P2S_LANE7_CTRL__
#define __TX_P2S_LANE7_CTRL__
#define TX_P2S_LANE7_CTRL(x) (x)->tx_p2s_lane7_ctrl_register.tx_p2s_lane7_ctrl_u.tx_p2s_lane7_ctrl
#define tx_drv_regs_LANE7_D_POL(x) (x)->tx_p2s_lane7_ctrl_register.tx_p2s_lane7_ctrl_u.bits.lane7_d_pol
#define tx_drv_regs_LANE7_CLK_POL(x) (x)->tx_p2s_lane7_ctrl_register.tx_p2s_lane7_ctrl_u.bits.lane7_clk_pol
#define tx_drv_regs_LANE7_PP_POL(x) (x)->tx_p2s_lane7_ctrl_register.tx_p2s_lane7_ctrl_u.bits.lane7_pp_pol
#define tx_drv_regs_LANE7_PM_POL(x) (x)->tx_p2s_lane7_ctrl_register.tx_p2s_lane7_ctrl_u.bits.lane7_pm_pol
#define tx_drv_regs_LANE7_DP_CTRL(x) (x)->tx_p2s_lane7_ctrl_register.tx_p2s_lane7_ctrl_u.bits.lane7_dp_ctrl
#define tx_drv_regs_LANE7_DM_CTRL(x) (x)->tx_p2s_lane7_ctrl_register.tx_p2s_lane7_ctrl_u.bits.lane7_dm_ctrl
#define tx_drv_regs_LANE7_ZP_POL(x) (x)->tx_p2s_lane7_ctrl_register.tx_p2s_lane7_ctrl_u.bits.lane7_zp_pol
#define tx_drv_regs_LANE7_ZM_POL(x) (x)->tx_p2s_lane7_ctrl_register.tx_p2s_lane7_ctrl_u.bits.lane7_zm_pol
typedef volatile struct tx_p2s_lane7_ctrl_s {
	union {
		struct {
			unsigned int lane7_d_pol : 1;
			unsigned int lane7_clk_pol : 1;
			unsigned int lane7_pp_pol : 1;
			unsigned int lane7_pm_pol : 1;
			unsigned int lane7_dp_ctrl : 5;
			unsigned int lane7_dm_ctrl : 5;
			unsigned int lane7_zp_pol : 1;
			unsigned int lane7_zm_pol : 1;
		} bits;
		uint32_t tx_p2s_lane7_ctrl;
	} tx_p2s_lane7_ctrl_u;
} tx_p2s_lane7_ctrl_t;
#endif /* __TX_P2S_LANE7_CTRL__ */

#ifndef __TX_P2S_DTEST__
#define __TX_P2S_DTEST__
#define TX_P2S_DTEST(x) (x)->tx_p2s_dtest_register.tx_p2s_dtest_u.tx_p2s_dtest
#define tx_drv_regs_P2S_TEST(x) (x)->tx_p2s_dtest_register.tx_p2s_dtest_u.bits.p2s_test
#define tx_drv_regs_D_TEST(x) (x)->tx_p2s_dtest_register.tx_p2s_dtest_u.bits.d_test
typedef volatile struct tx_p2s_dtest_s {
	union {
		struct {
			unsigned int p2s_test : 1;
			unsigned int d_test : 10;
		} bits;
		uint32_t tx_p2s_dtest;
	} tx_p2s_dtest_u;
} tx_p2s_dtest_t;
#endif /* __TX_P2S_DTEST__ */

#ifndef __TX_P2S_PPTEST__
#define __TX_P2S_PPTEST__
#define TX_P2S_PPTEST(x) (x)->tx_p2s_pptest_register.tx_p2s_pptest_u.tx_p2s_pptest
#define tx_drv_regs_PP_TEST(x) (x)->tx_p2s_pptest_register.tx_p2s_pptest_u.bits.pp_test
typedef volatile struct tx_p2s_pptest_s {
	union {
		struct {
			unsigned int pp_test : 10;
		} bits;
		uint32_t tx_p2s_pptest;
	} tx_p2s_pptest_u;
} tx_p2s_pptest_t;
#endif /* __TX_P2S_PPTEST__ */

#ifndef __TX_P2S_PMTEST__
#define __TX_P2S_PMTEST__
#define TX_P2S_PMTEST(x) (x)->tx_p2s_pmtest_register.tx_p2s_pmtest_u.tx_p2s_pmtest
#define tx_drv_regs_PM_TEST(x) (x)->tx_p2s_pmtest_register.tx_p2s_pmtest_u.bits.pm_test
typedef volatile struct tx_p2s_pmtest_s {
	union {
		struct {
			unsigned int pm_test : 10;
		} bits;
		uint32_t tx_p2s_pmtest;
	} tx_p2s_pmtest_u;
} tx_p2s_pmtest_t;
#endif /* __TX_P2S_PMTEST__ */

#ifndef __TX_ZCAL_CTRL__
#define __TX_ZCAL_CTRL__
#define TX_ZCAL_CTRL(x) (x)->tx_zcal_ctrl_register.tx_zcal_ctrl_u.tx_zcal_ctrl
#define tx_drv_regs_Z_EN(x) (x)->tx_zcal_ctrl_register.tx_zcal_ctrl_u.bits.z_en
#define tx_drv_regs_CLK_DIV(x) (x)->tx_zcal_ctrl_register.tx_zcal_ctrl_u.bits.clk_div
#define tx_drv_regs_ZP_MIN(x) (x)->tx_zcal_ctrl_register.tx_zcal_ctrl_u.bits.zp_min
#define tx_drv_regs_ZM_MIN(x) (x)->tx_zcal_ctrl_register.tx_zcal_ctrl_u.bits.zm_min
#define tx_drv_regs_Z_BACKGROUND_ENABLE(x) (x)->tx_zcal_ctrl_register.tx_zcal_ctrl_u.bits.z_background_enable
typedef volatile struct tx_zcal_ctrl_s {
	union {
		struct {
			unsigned int z_en : 1;
			unsigned int clk_div : 4;
			unsigned int zp_min : 5;
			unsigned int zm_min : 5;
			unsigned int z_background_enable : 1;
		} bits;
		uint32_t tx_zcal_ctrl;
	} tx_zcal_ctrl_u;
} tx_zcal_ctrl_t;
#endif /* __TX_ZCAL_CTRL__ */

#ifndef __TX_ZCAL_FREEZE__
#define __TX_ZCAL_FREEZE__
#define TX_ZCAL_FREEZE(x) (x)->tx_zcal_freeze_register.tx_zcal_freeze_u.tx_zcal_freeze
#define tx_drv_regs_Z_FREEZE(x) (x)->tx_zcal_freeze_register.tx_zcal_freeze_u.bits.z_freeze
#define tx_drv_regs_Z_FREEZE_STATE(x) (x)->tx_zcal_freeze_register.tx_zcal_freeze_u.bits.z_freeze_state
#define tx_drv_regs_Z_RESTART(x) (x)->tx_zcal_freeze_register.tx_zcal_freeze_u.bits.z_restart
typedef volatile struct tx_zcal_freeze_s {
	union {
		struct {
			unsigned int z_freeze : 1;
			unsigned int z_freeze_state : 2;
			unsigned int z_restart : 1;
		} bits;
		uint32_t tx_zcal_freeze;
	} tx_zcal_freeze_u;
} tx_zcal_freeze_t;
#endif /* __TX_ZCAL_FREEZE__ */

#ifndef __TX_ZCAL_OFFSET__
#define __TX_ZCAL_OFFSET__
#define TX_ZCAL_OFFSET(x) (x)->tx_zcal_offset_register.tx_zcal_offset_u.tx_zcal_offset
#define tx_drv_regs_ZP_OFFSET(x) (x)->tx_zcal_offset_register.tx_zcal_offset_u.bits.zp_offset
#define tx_drv_regs_ZM_OFFSET(x) (x)->tx_zcal_offset_register.tx_zcal_offset_u.bits.zm_offset
typedef volatile struct tx_zcal_offset_s {
	union {
		struct {
			unsigned int zp_offset : 5;
			unsigned int zm_offset : 5;
		} bits;
		uint32_t tx_zcal_offset;
	} tx_zcal_offset_u;
} tx_zcal_offset_t;
#endif /* __TX_ZCAL_OFFSET__ */

#ifndef __TX_ZCAL_LANE0_OFFSET__
#define __TX_ZCAL_LANE0_OFFSET__
#define TX_ZCAL_LANE0_OFFSET(x) (x)->tx_zcal_lane0_offset_register.tx_zcal_lane0_offset_u.tx_zcal_lane0_offset
#define tx_drv_regs_LANE0_ZP_OFFSET(x) (x)->tx_zcal_lane0_offset_register.tx_zcal_lane0_offset_u.bits.lane0_zp_offset
#define tx_drv_regs_LANE0_ZM_OFFSET(x) (x)->tx_zcal_lane0_offset_register.tx_zcal_lane0_offset_u.bits.lane0_zm_offset
typedef volatile struct tx_zcal_lane0_offset_s {
	union {
		struct {
			unsigned int lane0_zp_offset : 5;
			unsigned int lane0_zm_offset : 5;
		} bits;
		uint32_t tx_zcal_lane0_offset;
	} tx_zcal_lane0_offset_u;
} tx_zcal_lane0_offset_t;
#endif /* __TX_ZCAL_LANE0_OFFSET__ */

#ifndef __TX_ZCAL_LANE1_OFFSET__
#define __TX_ZCAL_LANE1_OFFSET__
#define TX_ZCAL_LANE1_OFFSET(x) (x)->tx_zcal_lane1_offset_register.tx_zcal_lane1_offset_u.tx_zcal_lane1_offset
#define tx_drv_regs_LANE1_ZP_OFFSET(x) (x)->tx_zcal_lane1_offset_register.tx_zcal_lane1_offset_u.bits.lane1_zp_offset
#define tx_drv_regs_LANE1_ZM_OFFSET(x) (x)->tx_zcal_lane1_offset_register.tx_zcal_lane1_offset_u.bits.lane1_zm_offset
typedef volatile struct tx_zcal_lane1_offset_s {
	union {
		struct {
			unsigned int lane1_zp_offset : 5;
			unsigned int lane1_zm_offset : 5;
		} bits;
		uint32_t tx_zcal_lane1_offset;
	} tx_zcal_lane1_offset_u;
} tx_zcal_lane1_offset_t;
#endif /* __TX_ZCAL_LANE1_OFFSET__ */

#ifndef __TX_ZCAL_LANE2_OFFSET__
#define __TX_ZCAL_LANE2_OFFSET__
#define TX_ZCAL_LANE2_OFFSET(x) (x)->tx_zcal_lane2_offset_register.tx_zcal_lane2_offset_u.tx_zcal_lane2_offset
#define tx_drv_regs_LANE2_ZP_OFFSET(x) (x)->tx_zcal_lane2_offset_register.tx_zcal_lane2_offset_u.bits.lane2_zp_offset
#define tx_drv_regs_LANE2_ZM_OFFSET(x) (x)->tx_zcal_lane2_offset_register.tx_zcal_lane2_offset_u.bits.lane2_zm_offset
typedef volatile struct tx_zcal_lane2_offset_s {
	union {
		struct {
			unsigned int lane2_zp_offset : 5;
			unsigned int lane2_zm_offset : 5;
		} bits;
		uint32_t tx_zcal_lane2_offset;
	} tx_zcal_lane2_offset_u;
} tx_zcal_lane2_offset_t;
#endif /* __TX_ZCAL_LANE2_OFFSET__ */

#ifndef __TX_ZCAL_LANE3_OFFSET__
#define __TX_ZCAL_LANE3_OFFSET__
#define TX_ZCAL_LANE3_OFFSET(x) (x)->tx_zcal_lane3_offset_register.tx_zcal_lane3_offset_u.tx_zcal_lane3_offset
#define tx_drv_regs_LANE3_ZP_OFFSET(x) (x)->tx_zcal_lane3_offset_register.tx_zcal_lane3_offset_u.bits.lane3_zp_offset
#define tx_drv_regs_LANE3_ZM_OFFSET(x) (x)->tx_zcal_lane3_offset_register.tx_zcal_lane3_offset_u.bits.lane3_zm_offset
typedef volatile struct tx_zcal_lane3_offset_s {
	union {
		struct {
			unsigned int lane3_zp_offset : 5;
			unsigned int lane3_zm_offset : 5;
		} bits;
		uint32_t tx_zcal_lane3_offset;
	} tx_zcal_lane3_offset_u;
} tx_zcal_lane3_offset_t;
#endif /* __TX_ZCAL_LANE3_OFFSET__ */

#ifndef __TX_ZCAL_LANE4_OFFSET__
#define __TX_ZCAL_LANE4_OFFSET__
#define TX_ZCAL_LANE4_OFFSET(x) (x)->tx_zcal_lane4_offset_register.tx_zcal_lane4_offset_u.tx_zcal_lane4_offset
#define tx_drv_regs_LANE4_ZP_OFFSET(x) (x)->tx_zcal_lane4_offset_register.tx_zcal_lane4_offset_u.bits.lane4_zp_offset
#define tx_drv_regs_LANE4_ZM_OFFSET(x) (x)->tx_zcal_lane4_offset_register.tx_zcal_lane4_offset_u.bits.lane4_zm_offset
typedef volatile struct tx_zcal_lane4_offset_s {
	union {
		struct {
			unsigned int lane4_zp_offset : 5;
			unsigned int lane4_zm_offset : 5;
		} bits;
		uint32_t tx_zcal_lane4_offset;
	} tx_zcal_lane4_offset_u;
} tx_zcal_lane4_offset_t;
#endif /* __TX_ZCAL_LANE4_OFFSET__ */

#ifndef __TX_ZCAL_LANE5_OFFSET__
#define __TX_ZCAL_LANE5_OFFSET__
#define TX_ZCAL_LANE5_OFFSET(x) (x)->tx_zcal_lane5_offset_register.tx_zcal_lane5_offset_u.tx_zcal_lane5_offset
#define tx_drv_regs_LANE5_ZP_OFFSET(x) (x)->tx_zcal_lane5_offset_register.tx_zcal_lane5_offset_u.bits.lane5_zp_offset
#define tx_drv_regs_LANE5_ZM_OFFSET(x) (x)->tx_zcal_lane5_offset_register.tx_zcal_lane5_offset_u.bits.lane5_zm_offset
typedef volatile struct tx_zcal_lane5_offset_s {
	union {
		struct {
			unsigned int lane5_zp_offset : 5;
			unsigned int lane5_zm_offset : 5;
		} bits;
		uint32_t tx_zcal_lane5_offset;
	} tx_zcal_lane5_offset_u;
} tx_zcal_lane5_offset_t;
#endif /* __TX_ZCAL_LANE5_OFFSET__ */

#ifndef __TX_ZCAL_LANE6_OFFSET__
#define __TX_ZCAL_LANE6_OFFSET__
#define TX_ZCAL_LANE6_OFFSET(x) (x)->tx_zcal_lane6_offset_register.tx_zcal_lane6_offset_u.tx_zcal_lane6_offset
#define tx_drv_regs_LANE6_ZP_OFFSET(x) (x)->tx_zcal_lane6_offset_register.tx_zcal_lane6_offset_u.bits.lane6_zp_offset
#define tx_drv_regs_LANE6_ZM_OFFSET(x) (x)->tx_zcal_lane6_offset_register.tx_zcal_lane6_offset_u.bits.lane6_zm_offset
typedef volatile struct tx_zcal_lane6_offset_s {
	union {
		struct {
			unsigned int lane6_zp_offset : 5;
			unsigned int lane6_zm_offset : 5;
		} bits;
		uint32_t tx_zcal_lane6_offset;
	} tx_zcal_lane6_offset_u;
} tx_zcal_lane6_offset_t;
#endif /* __TX_ZCAL_LANE6_OFFSET__ */

#ifndef __TX_ZCAL_LANE7_OFFSET__
#define __TX_ZCAL_LANE7_OFFSET__
#define TX_ZCAL_LANE7_OFFSET(x) (x)->tx_zcal_lane7_offset_register.tx_zcal_lane7_offset_u.tx_zcal_lane7_offset
#define tx_drv_regs_LANE7_ZP_OFFSET(x) (x)->tx_zcal_lane7_offset_register.tx_zcal_lane7_offset_u.bits.lane7_zp_offset
#define tx_drv_regs_LANE7_ZM_OFFSET(x) (x)->tx_zcal_lane7_offset_register.tx_zcal_lane7_offset_u.bits.lane7_zm_offset
typedef volatile struct tx_zcal_lane7_offset_s {
	union {
		struct {
			unsigned int lane7_zp_offset : 5;
			unsigned int lane7_zm_offset : 5;
		} bits;
		uint32_t tx_zcal_lane7_offset;
	} tx_zcal_lane7_offset_u;
} tx_zcal_lane7_offset_t;
#endif /* __TX_ZCAL_LANE7_OFFSET__ */

#ifndef __TX_ZCAL_TEST__
#define __TX_ZCAL_TEST__
#define TX_ZCAL_TEST(x) (x)->tx_zcal_test_register.tx_zcal_test_u.tx_zcal_test
#define tx_drv_regs_Z_TEST_TXC(x) (x)->tx_zcal_test_register.tx_zcal_test_u.bits.z_test_txc
#define tx_drv_regs_Z_TEST_P2S(x) (x)->tx_zcal_test_register.tx_zcal_test_u.bits.z_test_p2s
#define tx_drv_regs_ZP_TEST(x) (x)->tx_zcal_test_register.tx_zcal_test_u.bits.zp_test
#define tx_drv_regs_ZM_TEST(x) (x)->tx_zcal_test_register.tx_zcal_test_u.bits.zm_test
typedef volatile struct tx_zcal_test_s {
	union {
		struct {
			unsigned int z_test_txc : 1;
			unsigned int z_test_p2s : 1;
			unsigned int zp_test : 5;
			unsigned int zm_test : 5;
		} bits;
		uint32_t tx_zcal_test;
	} tx_zcal_test_u;
} tx_zcal_test_t;
#endif /* __TX_ZCAL_TEST__ */

#ifndef __TX_ZCAL_STATUS__
#define __TX_ZCAL_STATUS__
#define TX_ZCAL_STATUS(x) (x)->tx_zcal_status_register.tx_zcal_status_u.tx_zcal_status
#define tx_drv_regs_ZP_CAL_REG(x) (x)->tx_zcal_status_register.tx_zcal_status_u.bits.zp_cal_reg
#define tx_drv_regs_ZM_CAL_REG(x) (x)->tx_zcal_status_register.tx_zcal_status_u.bits.zm_cal_reg
#define tx_drv_regs_COMP_OUT(x) (x)->tx_zcal_status_register.tx_zcal_status_u.bits.comp_out
#define tx_drv_regs_ZCAL_DONE(x) (x)->tx_zcal_status_register.tx_zcal_status_u.bits.zcal_done
typedef volatile struct tx_zcal_status_s {
	union {
		struct {
			unsigned int zp_cal_reg : 5;
			unsigned int zm_cal_reg : 5;
			unsigned int comp_out : 1;
			unsigned int zcal_done : 1;
		} bits;
		uint32_t tx_zcal_status;
	} tx_zcal_status_u;
} tx_zcal_status_t;
#endif /* __TX_ZCAL_STATUS__ */

#ifndef __TX_TXC_CTRL__
#define __TX_TXC_CTRL__
#define TX_TXC_CTRL(x) (x)->tx_txc_ctrl_register.tx_txc_ctrl_u.tx_txc_ctrl
#define tx_drv_regs_CLK_EN(x) (x)->tx_txc_ctrl_register.tx_txc_ctrl_u.bits.clk_en
#define tx_drv_regs_CLK_MODE(x) (x)->tx_txc_ctrl_register.tx_txc_ctrl_u.bits.clk_mode
#define tx_drv_regs_REF_ENABLE(x) (x)->tx_txc_ctrl_register.tx_txc_ctrl_u.bits.ref_enable
#define tx_drv_regs_VCM_SELECT(x) (x)->tx_txc_ctrl_register.tx_txc_ctrl_u.bits.vcm_select
#define tx_drv_regs_REF_SELECT(x) (x)->tx_txc_ctrl_register.tx_txc_ctrl_u.bits.ref_select
#define tx_drv_regs_REF_LOCAL(x) (x)->tx_txc_ctrl_register.tx_txc_ctrl_u.bits.ref_local
#define tx_drv_regs_VCM(x) (x)->tx_txc_ctrl_register.tx_txc_ctrl_u.bits.vcm
#define tx_drv_regs_CLK_LINE_EN(x) (x)->tx_txc_ctrl_register.tx_txc_ctrl_u.bits.clk_line_en
typedef volatile struct tx_txc_ctrl_s {
	union {
		struct {
			unsigned int clk_en : 1;
			unsigned int clk_mode : 1;
			unsigned int ref_enable : 1;
			unsigned int vcm_select : 3;
			unsigned int ref_select : 3;
			unsigned int ref_local : 1;
			unsigned int vcm : 8;
			unsigned int clk_line_en : 8;
		} bits;
		uint32_t tx_txc_ctrl;
	} tx_txc_ctrl_u;
} tx_txc_ctrl_t;
#endif /* __TX_TXC_CTRL__ */

typedef struct tx_drv_regs_s
{
	tx_p2s_reset_ctrl_t tx_p2s_reset_ctrl_register;	// Address: 0x0
	tx_p2s_mode_ctrl_t tx_p2s_mode_ctrl_register;	// Address: 0x1
	tx_p2s_load_sdr_t tx_p2s_load_sdr_register;	// Address: 0x2
	tx_p2s_load_ddr_t tx_p2s_load_ddr_register;	// Address: 0x3
	tx_p2s_lane0_ctrl_t tx_p2s_lane0_ctrl_register;	// Address: 0x4
	tx_p2s_lane1_ctrl_t tx_p2s_lane1_ctrl_register;	// Address: 0x5
	tx_p2s_lane2_ctrl_t tx_p2s_lane2_ctrl_register;	// Address: 0x6
	tx_p2s_lane3_ctrl_t tx_p2s_lane3_ctrl_register;	// Address: 0x7
	tx_p2s_lane4_ctrl_t tx_p2s_lane4_ctrl_register;	// Address: 0x8
	tx_p2s_lane5_ctrl_t tx_p2s_lane5_ctrl_register;	// Address: 0x9
	tx_p2s_lane6_ctrl_t tx_p2s_lane6_ctrl_register;	// Address: 0xa
	tx_p2s_lane7_ctrl_t tx_p2s_lane7_ctrl_register;	// Address: 0xb
	tx_p2s_dtest_t tx_p2s_dtest_register;	// Address: 0xc
	tx_p2s_pptest_t tx_p2s_pptest_register;	// Address: 0xd
	tx_p2s_pmtest_t tx_p2s_pmtest_register;	// Address: 0xe
	tx_zcal_ctrl_t tx_zcal_ctrl_register;	// Address: 0xf
	tx_zcal_freeze_t tx_zcal_freeze_register;	// Address: 0x10
	tx_zcal_offset_t tx_zcal_offset_register;	// Address: 0x11
	tx_zcal_lane0_offset_t tx_zcal_lane0_offset_register;	// Address: 0x12
	tx_zcal_lane1_offset_t tx_zcal_lane1_offset_register;	// Address: 0x13
	tx_zcal_lane2_offset_t tx_zcal_lane2_offset_register;	// Address: 0x14
	tx_zcal_lane3_offset_t tx_zcal_lane3_offset_register;	// Address: 0x15
	tx_zcal_lane4_offset_t tx_zcal_lane4_offset_register;	// Address: 0x16
	tx_zcal_lane5_offset_t tx_zcal_lane5_offset_register;	// Address: 0x17
	tx_zcal_lane6_offset_t tx_zcal_lane6_offset_register;	// Address: 0x18
	tx_zcal_lane7_offset_t tx_zcal_lane7_offset_register;	// Address: 0x19
	tx_zcal_test_t tx_zcal_test_register;	// Address: 0x1a
	tx_zcal_status_t tx_zcal_status_register;	// Address: 0x1b
	tx_txc_ctrl_t tx_txc_ctrl_register;	// Address: 0x1c
} tx_drv_regs_t;

#endif /* __TX_DRV_REGS__ */
